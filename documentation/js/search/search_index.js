var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/Address.html",[0,0.056,1,1.868]],["body/classes/Address.html",[0,0.074,1,3.039,2,1.951,3,0.416,4,0.416,5,0.292,6,3.227,7,0.628,8,1.479,9,4.372,10,5.296,11,2.157,12,4.372,13,5.296,14,1.03,15,0.037,16,1.996,17,1.152,18,3.909,19,3.909,20,1.982,21,1.189,22,1.189,23,2.19,24,3.909,25,3.909,26,3.909,27,0.416,28,0.024,29,0.03,30,0.024]],["title/components/AppComponent.html",[31,0.604,32,1.002]],["body/components/AppComponent.html",[0,0.062,3,0.353,4,0.353,5,0.248,7,0.533,8,1.332,14,0.6,15,0.038,16,1.112,17,0.99,21,1.009,22,1.009,27,0.353,28,0.02,29,0.027,30,0.02,31,0.99,32,1.747,33,1.784,34,1.656,35,1.656,36,1.656,37,1.656,38,2.739,39,1.656,40,2.875,41,2.593,42,2.435,43,2.185,44,4.902,45,2.185,46,4.379,47,2.726,48,1.468,49,2.601,50,1.643,51,4.379,52,3.318,53,1.112,54,2.185,55,4.379,56,0.533,57,0.6,58,1.656,59,2.185,60,2.185,61,1.656,62,2.601,63,1.656,64,1.332,65,1.656,66,1.009,67,1.656,68,1.112,69,1.656,70,1.009,71,1.656,72,1.009,73,1.656,74,1.009,75,1.352,76,1.656,77,1.656]],["title/modules/AppModule.html",[78,1.663,79,1.868]],["body/modules/AppModule.html",[0,0.059,3,0.333,4,0.333,5,0.234,15,0.039,27,0.333,28,0.019,29,0.026,30,0.019,32,1.983,41,1.408,56,0.925,57,0.565,68,1.834,74,1.664,79,3.757,80,1.274,81,2.101,82,2.583,83,2.583,84,2.583,85,2.583,86,2.583,87,3.044,88,3.044,89,2.992,90,2.223,91,2.223,92,3.129,93,2.992,94,4.211,95,2.342,96,2.631,97,2.342,98,4.211,99,2.583,100,1.954,101,2.583,102,3.129,103,2.992,104,2.992,105,1.408,106,4.211,107,4.211,108,1.954,109,3.129,110,1.954,111,3.129,112,2.583,113,3.129,114,3.129,115,3.129,116,1.74]],["title/modules/AppRoutingModule.html",[78,1.663,87,1.663]],["body/modules/AppRoutingModule.html",[0,0.074,3,0.42,4,0.42,5,0.295,15,0.039,27,0.42,28,0.024,29,0.03,30,0.024,31,0.797,56,0.854,57,0.713,74,1.487,75,1.607,80,1.607,87,2.72,95,2.193,97,2.72,112,3.256,117,3.944,118,3.256,119,4.038,120,2.957,121,1.457,122,1.968,123,4.39,124,3.256,125,1.993,126,3.256,127,3.256,128,3.944,129,3.944,130,3.944,131,3.944,132,3.256]],["title/guards/AuthGuard.html",[133,2.125,134,1.868]],["body/guards/AuthGuard.html",[0,0.064,3,0.362,4,0.362,5,0.254,7,0.545,14,0.803,15,0.039,17,0.898,27,0.362,28,0.021,29,0.027,30,0.021,42,1.888,48,1.49,50,1.49,53,1.138,56,0.796,57,0.613,64,1.352,116,1.888,121,1.254,134,2.777,135,3.395,136,2.803,137,4.507,138,2.412,139,2.795,140,3.395,141,1.811,142,1.811,143,3.395,144,5.26,145,4.957,146,5.26,147,3.395,148,3.67,149,4.092,150,4.446,151,2.001,152,4.957,153,2.001,154,1.694,155,2.412,156,1.528,157,1.888,158,4.092,159,3.395,160,3.395,161,2.412,162,2.803,163,2.472,164,1.694]],["title/interceptors/AuthInterceptor.html",[88,1.663,165,2.469]],["body/interceptors/AuthInterceptor.html",[0,0.06,3,0.341,4,0.341,5,0.239,7,0.515,14,0.773,15,0.039,17,0.865,27,0.341,28,0.02,29,0.026,30,0.02,48,1.434,50,1.074,53,1.074,56,0.86,57,0.579,64,1.301,88,2.38,108,2.002,121,1.184,122,1.599,139,2.566,141,1.743,142,1.743,148,3.533,149,3.977,153,1.926,154,1.599,156,1.443,158,3.533,161,2.277,163,2.38,166,3.205,167,2.646,168,4.28,169,3.205,170,3.205,171,4.28,172,5.142,173,3.977,174,5.142,175,3.205,176,4.28,177,3.205,178,2.002,179,4.28,180,3.205,181,4.28,182,4.28,183,1.443,184,4.28,185,3.205,186,3.205,187,1.443,188,3.205,189,3.205,190,3.205,191,3.205,192,3.205,193,4.28,194,2.002,195,2.646,196,2.646,197,3.205,198,2.646,199,3.205,200,2.646,201,3.205]],["title/modules/ComponentsModule.html",[78,1.663,202,1.868]],["body/modules/ComponentsModule.html",[0,0.067,3,0.38,4,0.38,5,0.267,15,0.038,27,0.38,28,0.022,29,0.028,30,0.022,33,1.454,56,0.928,57,0.645,66,1.726,70,1.726,72,1.726,80,1.454,81,2.292,89,3.263,90,2.536,91,2.536,93,3.263,95,1.985,97,2.554,101,2.947,103,3.263,104,3.263,105,1.607,202,3.723,203,2.947,204,2.947,205,3.57,206,3.792,207,2.536,208,2.869,209,2.947,210,2.947,211,2.23,212,2.23,213,2.947]],["title/modules/ComponentsRoutingModule.html",[78,1.663,208,1.868]],["body/modules/ComponentsRoutingModule.html",[0,0.068,3,0.384,4,0.384,5,0.27,15,0.039,27,0.384,28,0.022,29,0.028,30,0.022,31,1.088,56,0.915,57,0.652,66,1.552,70,1.406,72,1.406,80,1.47,95,2.007,97,2.572,118,2.979,119,3.818,120,2.839,121,1.333,122,1.801,123,4.595,124,2.979,126,2.979,127,2.979,132,2.979,134,2.889,137,2.979,208,2.889,209,2.979,210,2.979,211,2.254,212,2.254,213,2.979,214,3.609,215,3.609,216,2.889,217,2.979,218,2.889,219,3.609,220,2.564,221,3.609]],["title/components/EditCreateComponent.html",[31,0.604,66,0.909]],["body/components/EditCreateComponent.html",[0,0.019,3,0.11,4,0.11,5,0.077,7,0.165,8,0.54,11,1.583,14,0.901,15,0.039,16,1.363,17,1.089,20,1.398,21,1.325,22,1.362,23,1.656,27,0.11,28,0.006,29,0.011,30,0.006,31,0.473,32,0.345,33,0.723,34,0.514,35,0.514,36,0.514,37,0.514,39,0.514,40,1.939,41,1.749,43,0.886,45,0.886,47,2.045,48,0.595,49,1.389,50,0.345,53,1.537,54,2.38,56,0.678,57,0.186,58,0.514,59,0.886,60,0.886,61,0.514,62,1.389,63,0.514,64,1.236,65,0.514,66,0.846,67,0.514,68,0.345,69,0.514,70,0.313,71,0.514,72,0.313,73,0.514,74,0.313,75,0.419,76,0.514,77,0.514,96,0.643,105,0.463,116,0.987,121,0.38,125,1.824,139,1.836,141,1.498,142,1.498,151,1.253,154,0.514,156,0.799,157,3.135,163,0.573,164,1.836,178,0.643,183,0.463,187,1.961,194,0.643,211,3.387,212,3.387,216,1.109,218,1.109,220,2.762,222,0.85,223,1.302,224,2.341,225,1.776,226,1.663,227,3.089,228,2.592,229,2.341,230,2.341,231,3.14,232,2.341,233,2.341,234,3.678,235,2.341,236,1.663,237,1.663,238,1.466,239,1.466,240,2.783,241,1.776,242,2.783,243,2.783,244,2.783,245,1.978,246,1.776,247,1.776,248,2.783,249,1.776,250,1.466,251,2.341,252,1.03,253,2.783,254,1.932,255,2.298,256,2.045,257,1.836,258,1.776,259,1.776,260,0.85,261,2.174,262,1.03,263,0.85,264,1.03,265,1.03,266,1.03,267,1.03,268,1.03,269,1.03,270,1.03,271,1.03,272,1.03,273,1.03,274,1.03,275,1.776,276,1.03,277,1.776,278,1.03,279,1.03,280,1.03,281,1.663,282,1.03,283,1.03,284,1.03,285,1.03,286,1.03,287,1.932,288,0.85,289,1.03,290,1.466,291,1.03,292,1.03,293,1.03,294,1.03,295,2.439,296,1.03,297,1.03,298,1.868,299,1.03,300,1.03,301,0.85,302,0.732,303,2.231,304,0.85,305,0.643,306,0.732,307,0.85,308,0.732,309,0.732,310,0.85,311,1.03,312,1.466,313,0.85,314,1.03,315,1.03,316,1.03,317,0.85,318,2.341,319,1.03,320,1.03,321,1.03,322,1.776,323,1.03,324,1.776,325,2.783,326,1.03,327,1.03,328,2.783,329,1.776,330,1.776,331,1.776,332,0.85,333,1.03,334,1.03,335,1.03,336,2.045,337,1.03,338,1.03,339,1.03,340,1.932,341,2.341,342,2.834,343,1.03,344,1.03,345,1.03,346,2.231,347,1.03,348,1.03,349,2.592,350,1.978,351,1.739,352,1.978,353,1.978,354,1.978,355,1.03,356,1.03,357,1.03,358,1.03,359,1.03,360,1.03,361,1.03,362,1.776,363,1.03,364,1.03,365,1.03,366,0.85,367,1.03,368,1.776,369,1.776,370,1.03,371,0.85,372,1.03,373,1.03,374,1.03,375,1.262,376,0.85,377,1.03,378,1.03,379,1.466,380,0.85,381,1.03,382,1.03,383,1.03,384,0.732,385,0.732,386,2.783,387,1.776,388,1.776,389,1.776,390,1.776,391,2.298,392,1.776,393,1.776,394,1.776,395,1.776,396,1.776,397,1.466,398,1.776]],["title/components/HeaderComponent.html",[31,0.604,68,1.002]],["body/components/HeaderComponent.html",[0,0.057,3,0.323,4,0.323,5,0.226,7,0.486,14,0.547,15,0.038,17,0.946,27,0.323,28,0.019,29,0.025,30,0.019,31,0.946,32,1.015,33,1.678,34,1.511,35,1.511,36,1.511,37,1.511,39,1.511,40,2.816,41,2.54,43,2.055,45,2.055,48,1.38,49,2.507,50,1.015,53,1.38,54,2.336,56,0.661,57,0.547,58,1.511,59,2.055,60,2.055,61,1.511,62,2.507,63,1.511,64,1.423,65,1.511,66,0.921,67,1.511,68,1.684,69,1.511,70,0.921,71,1.511,72,0.921,73,1.511,74,0.921,75,1.233,76,1.511,77,1.511,110,3.138,121,1.118,125,2.046,138,2.152,139,2.705,141,1.233,142,1.233,156,1.854,161,2.152,162,2.5,183,1.363,195,2.5,196,2.5,216,2.573,218,2.573,223,2.603,399,2.5,400,4.119,401,4.681,402,4.119,403,5.024,404,3.028,405,3.028,406,3.028,407,4.119,408,3.028,409,3.028,410,3.028]],["title/components/HomeComponent.html",[31,0.604,70,0.909]],["body/components/HomeComponent.html",[0,0.062,3,0.353,4,0.353,5,0.248,7,0.533,15,0.038,17,0.885,27,0.353,28,0.02,29,0.027,30,0.02,31,0.99,32,1.112,33,1.784,34,1.656,35,1.656,36,1.656,37,1.656,39,1.656,40,2.875,41,2.649,43,2.185,45,2.185,48,1.468,49,2.601,50,1.643,53,1.112,54,2.185,56,0.533,57,0.6,58,1.656,59,2.185,60,2.185,61,1.656,62,2.601,63,1.656,64,1.332,65,1.656,66,1.009,67,1.656,68,1.112,69,1.656,70,1.585,71,1.656,72,1.009,73,1.656,74,1.009,75,1.352,76,1.656,77,1.656,156,1.971,217,3.615,223,2.726,411,2.739,412,4.902,413,4.379,414,3.318,415,3.318,416,4.379,417,3.112,418,3.615,419,4.379,420,4.379]],["title/components/ListComponent.html",[31,0.604,72,0.909]],["body/components/ListComponent.html",[0,0.031,3,0.099,4,0.099,5,0.07,7,0.15,8,0.495,9,1.343,11,1.422,12,1.343,14,0.898,15,0.039,16,1.446,17,1.06,20,2.137,21,1.181,22,1.181,23,2.038,27,0.099,28,0.006,29,0.01,30,0.006,31,0.438,32,0.312,33,0.663,34,0.812,35,0.465,36,0.812,37,0.465,39,0.465,40,1.847,41,1.666,43,0.812,45,0.812,47,0.905,48,0.545,49,1.296,50,0.312,53,1.446,54,2.259,56,0.595,57,0.168,58,0.465,59,1.081,60,0.812,61,0.465,62,1.296,63,0.465,64,1.273,65,0.465,66,0.283,67,0.465,68,0.312,69,0.465,70,0.283,71,0.465,72,0.79,73,0.465,74,0.283,75,0.379,76,0.465,77,0.465,96,0.582,105,0.419,116,0.905,122,0.812,125,1.422,141,1.508,142,1.508,151,0.732,154,0.465,156,0.732,157,2.917,164,1.472,173,1.343,178,0.582,183,0.419,187,1.328,194,0.582,198,1.789,200,1.343,216,1.623,220,1.846,223,1.205,226,1.54,227,3.139,228,2.435,236,1.54,237,1.156,245,1.846,254,1.789,255,2.145,256,1.803,257,1.742,261,1.939,281,1.54,287,1.789,288,0.769,290,1.343,295,1.846,298,1.202,301,0.769,302,0.662,303,1.156,305,0.582,306,0.662,307,0.769,308,0.662,309,0.662,312,0.769,313,0.769,317,3.34,336,1.803,340,1.343,342,1.789,346,1.846,349,3.561,350,1.846,351,1.623,352,1.846,353,2.48,354,2.48,375,2.631,376,0.769,379,1.343,384,0.662,385,0.662,397,1.343,417,1.846,418,0.769,421,0.769,422,2.167,423,1.627,424,2.167,425,2.167,426,2.167,427,2.167,428,2.167,429,2.167,430,2.167,431,2.167,432,2.167,433,1.343,434,2.598,435,1.627,436,1.627,437,1.627,438,1.627,439,2.598,440,1.627,441,1.627,442,2.598,443,0.931,444,1.627,445,1.343,446,3.49,447,0.931,448,0.931,449,0.931,450,0.931,451,1.789,452,1.627,453,0.931,454,1.627,455,0.931,456,2.096,457,1.627,458,0.931,459,0.931,460,0.931,461,0.931,462,1.627,463,0.931,464,1.627,465,0.931,466,1.627,467,0.931,468,0.931,469,0.931,470,0.931,471,0.931,472,0.931,473,0.931,474,0.769,475,0.931,476,0.931,477,0.931,478,0.931,479,1.627,480,0.931,481,0.931,482,0.931,483,0.931,484,0.931,485,0.931,486,0.931,487,1.627,488,0.931,489,0.931,490,0.931,491,2.167,492,0.931,493,1.627,494,1.627,495,1.627,496,0.931,497,0.931,498,0.931,499,0.931,500,2.95,501,0.931,502,0.931,503,2.435,504,0.931,505,0.931,506,0.931,507,0.931,508,0.931,509,0.769,510,0.931,511,0.931,512,0.931,513,0.931,514,0.931,515,3.243,516,0.931,517,0.931,518,0.931,519,0.931,520,0.931,521,2.167,522,2.167,523,2.167,524,2.167,525,2.167,526,0.931,527,0.931,528,0.769,529,0.931,530,0.931,531,0.931,532,0.931,533,0.931,534,1.627,535,0.931,536,0.931,537,0.931,538,0.931,539,1.627,540,0.931,541,0.931,542,0.931,543,0.931,544,0.931,545,0.931,546,1.627,547,3.243,548,0.931,549,0.931,550,0.931,551,0.931,552,0.931,553,0.931,554,0.931,555,0.931,556,1.627,557,1.627,558,0.931,559,0.931,560,1.343,561,1.627,562,1.627,563,1.627,564,1.627,565,1.627,566,1.627,567,1.627,568,0.905,569,0.931,570,1.627,571,1.627,572,1.627,573,1.627,574,1.627,575,0.931,576,0.931,577,1.627,578,0.931,579,0.931,580,0.931,581,1.627,582,1.627,583,1.627,584,0.931,585,0.769,586,0.769,587,0.931,588,0.931,589,1.627,590,0.931,591,0.931,592,0.931,593,0.931,594,0.931,595,0.931,596,0.931,597,0.931,598,0.931,599,1.627,600,2.167,601,0.931,602,1.627,603,1.627,604,0.931,605,1.627,606,0.931,607,0.931,608,0.931,609,0.931,610,0.931,611,0.931,612,0.931]],["title/components/LoginComponent.html",[31,0.604,74,0.909]],["body/components/LoginComponent.html",[0,0.043,3,0.244,4,0.244,5,0.171,7,0.367,8,1.026,14,0.725,15,0.039,16,1.131,17,1.033,21,1.026,22,1.026,27,0.244,28,0.014,29,0.021,30,0.014,31,0.81,32,0.766,33,1.375,34,1.141,35,1.141,36,1.141,37,1.141,39,1.141,40,2.619,41,2.362,43,1.684,45,1.684,48,1.131,49,2.21,50,0.766,53,1.344,54,2.357,56,0.794,57,0.413,58,1.141,59,1.684,60,1.684,61,1.141,62,2.21,63,1.141,64,1.22,65,1.141,66,0.695,67,1.141,68,0.766,69,1.141,70,0.695,71,1.141,72,0.695,73,1.141,74,1.346,75,2.22,76,1.141,77,1.141,105,1.029,121,0.845,138,1.625,139,2.466,141,0.931,142,0.931,154,1.141,156,1.519,157,2.463,178,1.428,183,1.029,187,2.126,194,1.428,223,2.23,226,2.85,227,2.979,245,3.147,257,2.357,281,2.85,295,3.147,302,1.625,303,1.625,304,1.888,308,1.625,346,2.398,350,1.625,351,1.428,352,1.625,353,1.625,354,1.625,375,1.625,380,1.888,384,1.625,385,1.625,391,1.888,568,1.272,585,1.888,586,1.888,613,1.888,614,4.011,615,3.375,616,4.011,617,4.724,618,2.287,619,2.287,620,2.287,621,2.287,622,2.287,623,2.287,624,2.287,625,2.287,626,2.287,627,2.287,628,2.398,629,2.287,630,2.287,631,2.287,632,2.287,633,2.287,634,2.287,635,2.287,636,2.287,637,2.287,638,2.287,639,4.011,640,2.287,641,2.287,642,2.287,643,3.375,644,2.287,645,2.287,646,3.375,647,2.287]],["title/classes/LoginDto.html",[0,0.056,648,1.868]],["body/classes/LoginDto.html",[0,0.082,2,2.17,3,0.463,4,0.463,5,0.325,7,0.698,8,1.578,14,0.938,15,0.036,16,1.926,17,1.049,27,0.463,28,0.027,29,0.032,30,0.027,568,3.086,628,3.943,648,3.242,649,3.589,650,4.348,651,4.348]],["title/modules/SharedModuleModule.html",[78,1.663,652,2.125]],["body/modules/SharedModuleModule.html",[0,0.079,3,0.45,4,0.45,5,0.316,15,0.038,27,0.45,28,0.026,29,0.031,30,0.026,56,0.88,57,0.763,80,1.72,93,3,95,2.348,97,2.836,103,3.624,104,3.624,105,1.9,110,2.637,206,4.21,207,3,652,3.624,653,4.222,654,4.222]],["title/classes/Todo.html",[0,0.056,125,1.218]],["body/classes/Todo.html",[0,0.072,2,1.9,3,0.406,4,0.406,5,0.284,7,0.611,8,1.455,11,2.132,14,0.992,15,0.038,16,1.604,17,1.109,20,2.236,21,1.669,22,1.669,23,2.471,27,0.406,28,0.023,29,0.029,30,0.023,47,2.91,125,1.949,151,2.154,164,2.388,332,4.32,336,2.91,655,3.143,656,3.807,657,3.807,658,3.807,659,3.807]],["title/classes/TodoCustom.html",[0,0.056,261,1.493]],["body/classes/TodoCustom.html",[0,0.07,2,1.867,3,0.399,4,0.399,5,0.28,7,0.601,8,1.439,11,2.115,14,0.986,15,0.038,16,1.586,17,1.102,20,1.928,21,1.659,22,1.659,23,2.131,27,0.399,28,0.023,29,0.029,30,0.023,47,2.887,56,0.601,151,2.131,164,2.362,187,2.131,261,2.362,298,2.406,310,3.089,336,2.887,660,3.089,661,3.742,662,3.742,663,3.742,664,3.742]],["title/injectables/TodoService.html",[153,1.346,256,1.663]],["body/injectables/TodoService.html",[0,0.045,3,0.256,4,0.256,5,0.18,7,0.386,8,1.064,11,1.682,14,0.962,15,0.039,16,1.384,17,1.129,20,2.246,21,0.731,22,0.731,27,0.256,28,0.015,29,0.022,30,0.015,42,1.337,48,1.173,50,0.806,53,1.819,56,0.728,57,0.434,64,1.618,108,1.501,122,2.656,125,1.847,141,2.168,142,2.168,153,1.576,155,1.708,163,3.018,183,1.082,227,2.296,238,2.89,239,2.89,256,1.947,260,1.984,261,2.405,263,1.984,309,1.708,366,1.984,371,1.984,433,2.89,445,1.984,451,1.984,456,3.856,665,1.708,666,1.984,667,2.933,668,4.535,669,4.535,670,3.501,671,3.501,672,3.501,673,3.501,674,1.984,675,4.153,676,3.501,677,2.404,678,2.404,679,2.404,680,2.404,681,2.404,682,2.404,683,2.404,684,2.404,685,2.404,686,2.404,687,3.501,688,2.404,689,3.501,690,2.404,691,2.89,692,1.501,693,2.404,694,4.129,695,4.153,696,2.404,697,2.404,698,2.404,699,2.404,700,2.404,701,2.404,702,2.404,703,2.404,704,3.501,705,1.984,706,2.404,707,2.404,708,2.404,709,2.404]],["title/classes/User.html",[0,0.056,298,1.218]],["body/classes/User.html",[0,0.072,1,3.44,2,1.916,3,0.409,4,0.409,5,0.287,7,0.617,8,1.463,11,2.14,14,1.025,15,0.038,16,1.612,17,1.146,20,2.243,21,1.168,22,1.168,27,0.409,28,0.024,29,0.03,30,0.024,56,0.617,64,1.597,151,2.166,187,2.166,298,1.96,336,2.922,568,2.922,710,3.17,711,4.811,712,3.841,713,3.841,714,3.841,715,3.841,716,3.841,717,3.841,718,3.841]],["title/injectables/UserService.html",[153,1.346,257,1.493]],["body/injectables/UserService.html",[0,0.051,3,0.291,4,0.291,5,0.204,7,0.439,8,1.167,11,1.113,14,0.869,15,0.038,17,1.09,20,2.279,21,0.831,22,0.831,23,1.23,27,0.291,28,0.017,29,0.024,30,0.017,42,1.52,48,1.286,50,0.916,53,1.611,56,0.843,57,0.494,64,1.462,75,1.563,108,1.707,121,1.009,122,2.213,139,2.691,141,1.959,142,1.959,151,1.727,153,1.727,155,1.942,157,1.52,163,2.817,183,1.23,227,3.284,236,3.416,250,3.167,257,1.915,298,1.113,456,3.151,648,3.004,665,1.942,667,3.151,674,2.256,675,4.335,691,3.167,692,1.707,695,3.167,705,2.256,719,2.256,720,3.837,721,4.809,722,3.837,723,4.434,724,3.837,725,3.837,726,2.733,727,3.837,728,2.733,729,3.837,730,2.733,731,3.837,732,2.733,733,3.837,734,2.733,735,2.733,736,2.733,737,2.733,738,2.733,739,2.733,740,2.733,741,2.733,742,2.733]],["title/coverage.html",[743,3.372]],["body/coverage.html",[0,0.102,1,2.067,5,0.247,6,2.732,14,0.598,15,0.038,23,2.761,28,0.02,29,0.027,30,0.02,31,1.124,32,1.109,38,2.732,66,1.006,68,1.109,70,1.006,72,1.006,74,1.006,88,1.84,110,2.067,125,1.348,133,2.352,134,2.067,136,2.732,153,1.968,165,2.732,167,2.732,187,1.49,211,2.067,212,2.067,222,2.732,256,1.84,257,1.652,261,1.652,298,1.348,399,2.732,411,2.732,421,2.732,613,2.732,648,2.067,649,2.732,655,2.732,660,2.732,666,2.732,692,2.731,710,2.732,719,2.732,743,2.732,744,3.31,745,3.31,746,3.31,747,4.372,748,3.31,749,4.372,750,5.208,751,4.372,752,4.372,753,3.31,754,3.31,755,2.732,756,5.208,757,5.208,758,2.732,759,3.609,760,2.732,761,2.732,762,3.31,763,3.31]],["title/dependencies.html",[81,1.795,764,2.497]],["body/dependencies.html",[15,0.038,28,0.025,29,0.031,30,0.025,57,0.737,81,2.035,96,3.119,99,4.122,100,3.119,105,1.836,121,1.506,154,2.035,207,2.898,305,2.548,306,2.898,765,4.079,766,4.956,767,4.079,768,4.079,769,4.079,770,4.079,771,4.079,772,4.079,773,4.079,774,4.079,775,4.079,776,4.079,777,4.079,778,4.079,779,4.079]],["title/index.html",[7,0.401,780,2.497,781,2.497]],["body/index.html",[5,0.265,15,0.034,28,0.022,29,0.028,30,0.022,42,2.541,81,2.28,100,3.16,218,2.212,237,3.247,298,1.442,305,2.212,417,2.516,509,2.923,528,2.923,560,2.923,568,1.969,628,3.594,766,2.923,782,3.541,783,4.569,784,5.059,785,3.541,786,5.345,787,5.059,788,3.541,789,3.541,790,5.841,791,3.541,792,3.541,793,3.541,794,3.541,795,3.541,796,3.541,797,4.569,798,3.541,799,3.541,800,3.541,801,3.541,802,3.541,803,3.541,804,3.541,805,4.569,806,5.345,807,4.569,808,4.569,809,3.541,810,3.541,811,3.541,812,3.541,813,3.541,814,3.541,815,4.569,816,3.541,817,3.541,818,3.541,819,4.569,820,3.541,821,3.541,822,3.541,823,3.541,824,3.541,825,3.541,826,3.541,827,3.541,828,3.541,829,3.541,830,3.541,831,3.541,832,3.541]],["title/modules.html",[80,1.664]],["body/modules.html",[15,0.032,28,0.027,29,0.032,30,0.027,79,2.79,80,1.819,87,2.483,100,3.294,202,2.79,208,2.79,351,3.506,652,3.173,833,5.274,834,5.274,835,5.916,836,5.612]],["title/overview.html",[837,3.372]],["body/overview.html",[2,1.846,15,0.037,28,0.023,29,0.029,30,0.023,32,1.952,33,1.507,66,1.57,68,1.731,70,1.57,72,1.57,74,1.57,79,3.805,80,1.507,81,2.345,82,3.055,83,3.055,84,3.055,85,3.055,86,3.055,87,2.872,88,2.872,89,3.339,90,2.629,91,2.629,120,2.058,133,2.629,202,3.681,203,3.055,204,3.055,503,3.055,665,2.629,837,3.055,838,4.7,839,3.7,840,3.7,841,3.7]],["title/routes.html",[120,2.271]],["body/routes.html",[15,0.034,28,0.03,29,0.034,30,0.03,120,2.684]],["title/miscellaneous/variables.html",[842,2.061,843,2.97]],["body/miscellaneous/variables.html",[7,0.649,14,1.013,15,0.038,21,1.634,22,1.634,28,0.025,29,0.031,30,0.025,116,2.761,164,2.016,474,4.099,667,2.871,692,3.502,755,3.336,758,3.336,759,3.336,760,4.099,761,4.099,842,3.336,843,3.336,844,4.966,845,4.041,846,4.041,847,4.041,848,4.041,849,4.041,850,4.966,851,4.041,852,4.041,853,4.041,854,4.966]]],"invertedIndex":[["",{"_index":15,"title":{},"body":{"classes/Address.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/ComponentsModule.html":{},"modules/ComponentsRoutingModule.html":{},"components/EditCreateComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"classes/LoginDto.html":{},"modules/SharedModuleModule.html":{},"classes/Todo.html":{},"classes/TodoCustom.html":{},"injectables/TodoService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":23,"title":{},"body":{"classes/Address.html":{},"components/EditCreateComponent.html":{},"components/ListComponent.html":{},"classes/Todo.html":{},"classes/TodoCustom.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["0.11.4",{"_index":779,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":757,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":753,"title":{},"body":{"coverage.html":{}}}],["0/27",{"_index":749,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":750,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":747,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":752,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":751,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":754,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":748,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":503,"title":{},"body":{"components/ListComponent.html":{},"overview.html":{}}}],["1').trim",{"_index":534,"title":{},"body":{"components/ListComponent.html":{}}}],["1.16.1",{"_index":774,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":479,"title":{},"body":{"components/ListComponent.html":{}}}],["10.0.0",{"_index":769,"title":{},"body":{"dependencies.html":{}}}],["12.0.0",{"_index":766,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["13",{"_index":841,"title":{},"body":{"overview.html":{}}}],["2",{"_index":840,"title":{},"body":{"overview.html":{}}}],["2.1.0",{"_index":777,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":646,"title":{},"body":{"components/LoginComponent.html":{}}}],["3.6.0",{"_index":772,"title":{},"body":{"dependencies.html":{}}}],["401",{"_index":194,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/EditCreateComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{}}}],["403",{"_index":376,"title":{},"body":{"components/EditCreateComponent.html":{},"components/ListComponent.html":{}}}],["404",{"_index":198,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/ListComponent.html":{}}}],["4200",{"_index":825,"title":{},"body":{"index.html":{}}}],["5",{"_index":838,"title":{},"body":{"overview.html":{}}}],["5.0.2",{"_index":770,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":839,"title":{},"body":{"overview.html":{}}}],["6.6.0",{"_index":775,"title":{},"body":{"dependencies.html":{}}}],["700",{"_index":587,"title":{},"body":{"components/ListComponent.html":{}}}],["9",{"_index":330,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["access",{"_index":827,"title":{},"body":{"index.html":{}}}],["accessors",{"_index":250,"title":{},"body":{"components/EditCreateComponent.html":{},"injectables/UserService.html":{}}}],["activate",{"_index":564,"title":{},"body":{"components/ListComponent.html":{}}}],["activatedroute",{"_index":253,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["activatedroutesnapshot",{"_index":144,"title":{},"body":{"guards/AuthGuard.html":{}}}],["activateroute",{"_index":259,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["actual_component",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/EditCreateComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{}}}],["address",{"_index":1,"title":{"classes/Address.html":{}},"body":{"classes/Address.html":{},"classes/User.html":{},"coverage.html":{}}}],["addressentity",{"_index":711,"title":{},"body":{"classes/User.html":{}}}],["addressentity:address",{"_index":718,"title":{},"body":{"classes/User.html":{}}}],["administrator",{"_index":525,"title":{},"body":{"components/ListComponent.html":{}}}],["again",{"_index":354,"title":{},"body":{"components/EditCreateComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{}}}],["align",{"_index":590,"title":{},"body":{"components/ListComponent.html":{}}}],["angular",{"_index":786,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":765,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":207,"title":{},"body":{"modules/ComponentsModule.html":{},"modules/SharedModuleModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/TodoService.html":{},"injectables/UserService.html":{}}}],["angular/compiler",{"_index":767,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/ComponentsModule.html":{},"modules/ComponentsRoutingModule.html":{},"components/EditCreateComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"modules/SharedModuleModule.html":{},"injectables/TodoService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"modules/ComponentsModule.html":{},"components/EditCreateComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"modules/SharedModuleModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":121,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/ComponentsRoutingModule.html":{},"components/EditCreateComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["another",{"_index":370,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["app",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditCreateComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{}}}],["app.component",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":44,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":46,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":32,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditCreateComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appearance",{"_index":605,"title":{},"body":{"components/ListComponent.html":{}}}],["application",{"_index":790,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":79,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":87,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["array",{"_index":477,"title":{},"body":{"components/ListComponent.html":{}}}],["array(res.body['totalpages",{"_index":518,"title":{},"body":{"components/ListComponent.html":{}}}],["array;//array",{"_index":488,"title":{},"body":{"components/ListComponent.html":{}}}],["assigned",{"_index":390,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["authguard",{"_index":134,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"modules/ComponentsRoutingModule.html":{},"coverage.html":{}}}],["authinterceptor",{"_index":88,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["authorization",{"_index":188,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["available",{"_index":351,"title":{},"body":{"components/EditCreateComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"modules.html":{}}}],["backend",{"_index":795,"title":{},"body":{"index.html":{}}}],["bar",{"_index":420,"title":{},"body":{"components/HomeComponent.html":{}}}],["base_url",{"_index":667,"title":{},"body":{"injectables/TodoService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["bearer",{"_index":189,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["bold",{"_index":647,"title":{},"body":{"components/LoginComponent.html":{}}}],["boolean",{"_index":151,"title":{},"body":{"guards/AuthGuard.html":{},"components/EditCreateComponent.html":{},"components/ListComponent.html":{},"classes/Todo.html":{},"classes/TodoCustom.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["boot",{"_index":831,"title":{},"body":{"index.html":{}}}],["bootstrap",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"components/EditCreateComponent.html":{},"components/ListComponent.html":{},"dependencies.html":{}}}],["bootstrap/ng",{"_index":306,"title":{},"body":{"components/EditCreateComponent.html":{},"components/ListComponent.html":{},"dependencies.html":{}}}],["browse",{"_index":835,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{},"modules.html":{}}}],["browsermodule",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["building",{"_index":799,"title":{},"body":{"index.html":{}}}],["button",{"_index":603,"title":{},"body":{"components/ListComponent.html":{}}}],["can't",{"_index":546,"title":{},"body":{"components/ListComponent.html":{}}}],["canactivate",{"_index":137,"title":{},"body":{"guards/AuthGuard.html":{},"modules/ComponentsRoutingModule.html":{}}}],["canactivate(route",{"_index":143,"title":{},"body":{"guards/AuthGuard.html":{}}}],["catcherror",{"_index":177,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["center",{"_index":591,"title":{},"body":{"components/ListComponent.html":{}}}],["challenge",{"_index":789,"title":{},"body":{"index.html":{}}}],["change",{"_index":496,"title":{},"body":{"components/ListComponent.html":{}}}],["check",{"_index":562,"title":{},"body":{"components/ListComponent.html":{}}}],["checkhaspermissionmodidy",{"_index":720,"title":{},"body":{"injectables/UserService.html":{}}}],["checkhaspermissionmodidy(ownerid",{"_index":725,"title":{},"body":{"injectables/UserService.html":{}}}],["chrome",{"_index":595,"title":{},"body":{"components/ListComponent.html":{}}}],["city",{"_index":9,"title":{},"body":{"classes/Address.html":{},"components/ListComponent.html":{}}}],["class",{"_index":0,"title":{"classes/Address.html":{},"classes/LoginDto.html":{},"classes/Todo.html":{},"classes/TodoCustom.html":{},"classes/User.html":{}},"body":{"classes/Address.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/ComponentsModule.html":{},"modules/ComponentsRoutingModule.html":{},"components/EditCreateComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"classes/LoginDto.html":{},"modules/SharedModuleModule.html":{},"classes/Todo.html":{},"classes/TodoCustom.html":{},"injectables/TodoService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/Address.html":{},"classes/LoginDto.html":{},"classes/Todo.html":{},"classes/TodoCustom.html":{},"classes/User.html":{},"overview.html":{}}}],["cli",{"_index":787,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_componentsmodule",{"_index":203,"title":{},"body":{"modules/ComponentsModule.html":{},"overview.html":{}}}],["cluster_componentsmodule_declarations",{"_index":204,"title":{},"body":{"modules/ComponentsModule.html":{},"overview.html":{}}}],["color",{"_index":644,"title":{},"body":{"components/LoginComponent.html":{}}}],["commonmodule",{"_index":206,"title":{},"body":{"modules/ComponentsModule.html":{},"modules/SharedModuleModule.html":{}}}],["completed",{"_index":336,"title":{},"body":{"components/EditCreateComponent.html":{},"components/ListComponent.html":{},"classes/Todo.html":{},"classes/TodoCustom.html":{},"classes/User.html":{}}}],["component",{"_index":31,"title":{"components/AppComponent.html":{},"components/EditCreateComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/ComponentsRoutingModule.html":{},"components/EditCreateComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/EditCreateComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{}}}],["components",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"modules/ComponentsModule.html":{},"components/EditCreateComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"overview.html":{}}}],["components/login/login.component",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["componentsmodule",{"_index":202,"title":{"modules/ComponentsModule.html":{}},"body":{"modules/ComponentsModule.html":{},"modules.html":{},"overview.html":{}}}],["componentsroutingmodule",{"_index":208,"title":{"modules/ComponentsRoutingModule.html":{}},"body":{"modules/ComponentsModule.html":{},"modules/ComponentsRoutingModule.html":{},"modules.html":{}}}],["console.info('[authservice.ts",{"_index":191,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["console.info('resource",{"_index":199,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["const",{"_index":122,"title":{},"body":{"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"modules/ComponentsRoutingModule.html":{},"components/ListComponent.html":{},"injectables/TodoService.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/EditCreateComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"injectables/TodoService.html":{},"injectables/UserService.html":{}}}],["constructor(activateroute",{"_index":252,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["constructor(httpclient",{"_index":674,"title":{},"body":{"injectables/TodoService.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":183,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/EditCreateComponent.html":{},"components/HeaderComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"injectables/TodoService.html":{},"injectables/UserService.html":{}}}],["constructor(route",{"_index":169,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["constructor(router",{"_index":138,"title":{},"body":{"guards/AuthGuard.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["constructor(todoservice",{"_index":443,"title":{},"body":{"components/ListComponent.html":{}}}],["contact",{"_index":524,"title":{},"body":{"components/ListComponent.html":{}}}],["context",{"_index":760,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["correctly",{"_index":814,"title":{},"body":{"index.html":{}}}],["country",{"_index":10,"title":{},"body":{"classes/Address.html":{}}}],["coverage",{"_index":743,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":218,"title":{},"body":{"modules/ComponentsRoutingModule.html":{},"components/EditCreateComponent.html":{},"components/HeaderComponent.html":{},"index.html":{}}}],["create.component",{"_index":213,"title":{},"body":{"modules/ComponentsModule.html":{},"modules/ComponentsRoutingModule.html":{}}}],["create.component.css",{"_index":224,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["create.component.html",{"_index":225,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["create.component.ts",{"_index":222,"title":{},"body":{"components/EditCreateComponent.html":{},"coverage.html":{}}}],["create.component.ts:112",{"_index":269,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["create.component.ts:119",{"_index":268,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["create.component.ts:128",{"_index":280,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["create.component.ts:135",{"_index":278,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["create.component.ts:144",{"_index":262,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["create.component.ts:155",{"_index":264,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["create.component.ts:172",{"_index":276,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["create.component.ts:18",{"_index":291,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["create.component.ts:184",{"_index":274,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["create.component.ts:188",{"_index":300,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["create.component.ts:192",{"_index":271,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["create.component.ts:20",{"_index":282,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["create.component.ts:21",{"_index":293,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["create.component.ts:22",{"_index":283,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["create.component.ts:23",{"_index":286,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["create.component.ts:24",{"_index":292,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["create.component.ts:26",{"_index":294,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["create.component.ts:27",{"_index":285,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["create.component.ts:28",{"_index":284,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["create.component.ts:30",{"_index":296,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["create.component.ts:32",{"_index":297,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["create.component.ts:33",{"_index":258,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["create.component.ts:41",{"_index":272,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["create.component.ts:47",{"_index":265,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["create.component.ts:67",{"_index":270,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["create.component.ts:99",{"_index":267,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["create/edit",{"_index":212,"title":{},"body":{"modules/ComponentsModule.html":{},"modules/ComponentsRoutingModule.html":{},"components/EditCreateComponent.html":{},"coverage.html":{}}}],["createtodo",{"_index":238,"title":{},"body":{"components/EditCreateComponent.html":{},"injectables/TodoService.html":{}}}],["createtodo(todo",{"_index":260,"title":{},"body":{"components/EditCreateComponent.html":{},"injectables/TodoService.html":{}}}],["createtodo(todo:todocustom",{"_index":366,"title":{},"body":{"components/EditCreateComponent.html":{},"injectables/TodoService.html":{}}}],["currentpage",{"_index":424,"title":{},"body":{"components/ListComponent.html":{}}}],["cursor",{"_index":409,"title":{},"body":{"components/HeaderComponent.html":{}}}],["cursormousehover",{"_index":408,"title":{},"body":{"components/HeaderComponent.html":{}}}],["custom_api_base_url",{"_index":851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.sql",{"_index":830,"title":{},"body":{"index.html":{}}}],["declarations",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"modules/ComponentsModule.html":{},"modules/SharedModuleModule.html":{}}}],["decoration",{"_index":593,"title":{},"body":{"components/ListComponent.html":{}}}],["decorators",{"_index":288,"title":{},"body":{"components/EditCreateComponent.html":{},"components/ListComponent.html":{}}}],["default",{"_index":21,"title":{},"body":{"classes/Address.html":{},"components/AppComponent.html":{},"components/EditCreateComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"classes/Todo.html":{},"classes/TodoCustom.html":{},"injectables/TodoService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":17,"title":{},"body":{"classes/Address.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/EditCreateComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"classes/LoginDto.html":{},"classes/Todo.html":{},"classes/TodoCustom.html":{},"injectables/TodoService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":547,"title":{},"body":{"components/ListComponent.html":{}}}],["deletetodo",{"_index":433,"title":{},"body":{"components/ListComponent.html":{},"injectables/TodoService.html":{}}}],["deletetodo(id",{"_index":445,"title":{},"body":{"components/ListComponent.html":{},"injectables/TodoService.html":{}}}],["deletetodo(id:number",{"_index":708,"title":{},"body":{"injectables/TodoService.html":{}}}],["dependencies",{"_index":81,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ComponentsModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["destroy",{"_index":226,"title":{},"body":{"components/EditCreateComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{}}}],["dev",{"_index":818,"title":{},"body":{"index.html":{}}}],["development",{"_index":804,"title":{},"body":{"index.html":{}}}],["directive",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/EditCreateComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{}}}],["directives",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"components/EditCreateComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{}}}],["directly",{"_index":509,"title":{},"body":{"components/ListComponent.html":{},"index.html":{}}}],["div",{"_index":588,"title":{},"body":{"components/ListComponent.html":{}}}],["documentation",{"_index":744,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/EditCreateComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{}}}],["don't",{"_index":820,"title":{},"body":{"index.html":{}}}],["done",{"_index":393,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["dynamic",{"_index":768,"title":{},"body":{"dependencies.html":{}}}],["edge",{"_index":597,"title":{},"body":{"components/ListComponent.html":{}}}],["edit",{"_index":220,"title":{},"body":{"modules/ComponentsRoutingModule.html":{},"components/EditCreateComponent.html":{},"components/ListComponent.html":{}}}],["edit'},{'name",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/EditCreateComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{}}}],["edit/:id",{"_index":219,"title":{},"body":{"modules/ComponentsRoutingModule.html":{}}}],["edit/delete",{"_index":566,"title":{},"body":{"components/ListComponent.html":{}}}],["editcreatecomponent",{"_index":66,"title":{"components/EditCreateComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/ComponentsModule.html":{},"modules/ComponentsRoutingModule.html":{},"components/EditCreateComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"coverage.html":{},"overview.html":{}}}],["edittodo",{"_index":239,"title":{},"body":{"components/EditCreateComponent.html":{},"injectables/TodoService.html":{}}}],["edittodo(todo",{"_index":263,"title":{},"body":{"components/EditCreateComponent.html":{},"injectables/TodoService.html":{}}}],["edittodo(todo:todocustom",{"_index":371,"title":{},"body":{"components/EditCreateComponent.html":{},"injectables/TodoService.html":{}}}],["element",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/EditCreateComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{}}}],["environment",{"_index":692,"title":{},"body":{"injectables/TodoService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.custom_api_base_url",{"_index":691,"title":{},"body":{"injectables/TodoService.html":{},"injectables/UserService.html":{}}}],["environments/environment",{"_index":693,"title":{},"body":{"injectables/TodoService.html":{}}}],["error",{"_index":346,"title":{},"body":{"components/EditCreateComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{}}}],["error.status",{"_index":193,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["error[\"status",{"_index":375,"title":{},"body":{"components/EditCreateComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{}}}],["errormessage",{"_index":228,"title":{},"body":{"components/EditCreateComponent.html":{},"components/ListComponent.html":{}}}],["export",{"_index":27,"title":{},"body":{"classes/Address.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/ComponentsModule.html":{},"modules/ComponentsRoutingModule.html":{},"components/EditCreateComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"classes/LoginDto.html":{},"modules/SharedModuleModule.html":{},"classes/Todo.html":{},"classes/TodoCustom.html":{},"injectables/TodoService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":132,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ComponentsRoutingModule.html":{}}}],["false",{"_index":164,"title":{},"body":{"guards/AuthGuard.html":{},"components/EditCreateComponent.html":{},"components/ListComponent.html":{},"classes/Todo.html":{},"classes/TodoCustom.html":{},"miscellaneous/variables.html":{}}}],["field",{"_index":554,"title":{},"body":{"components/ListComponent.html":{}}}],["fields",{"_index":641,"title":{},"body":{"components/LoginComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/Address.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/ComponentsModule.html":{},"modules/ComponentsRoutingModule.html":{},"components/EditCreateComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"classes/LoginDto.html":{},"modules/SharedModuleModule.html":{},"classes/Todo.html":{},"classes/TodoCustom.html":{},"injectables/TodoService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["find",{"_index":560,"title":{},"body":{"components/ListComponent.html":{},"index.html":{}}}],["finished",{"_index":394,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["firefox",{"_index":608,"title":{},"body":{"components/ListComponent.html":{}}}],["first",{"_index":494,"title":{},"body":{"components/ListComponent.html":{}}}],["first_page",{"_index":425,"title":{},"body":{"components/ListComponent.html":{}}}],["folder",{"_index":812,"title":{},"body":{"index.html":{}}}],["font",{"_index":585,"title":{},"body":{"components/ListComponent.html":{},"components/LoginComponent.html":{}}}],["forbidden",{"_index":345,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["formcontrol",{"_index":303,"title":{},"body":{"components/EditCreateComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{}}}],["formcontrol('jhon',[validators.required",{"_index":627,"title":{},"body":{"components/LoginComponent.html":{}}}],["formcontrol('password',[validators.required",{"_index":629,"title":{},"body":{"components/LoginComponent.html":{}}}],["formdata",{"_index":733,"title":{},"body":{"injectables/UserService.html":{}}}],["formgroup",{"_index":295,"title":{},"body":{"components/EditCreateComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{}}}],["formsmodule",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"modules/ComponentsModule.html":{},"modules/SharedModuleModule.html":{}}}],["formuserid",{"_index":426,"title":{},"body":{"components/ListComponent.html":{}}}],["found",{"_index":200,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/ListComponent.html":{}}}],["frontend",{"_index":783,"title":{},"body":{"index.html":{}}}],["full",{"_index":127,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ComponentsRoutingModule.html":{}}}],["generated",{"_index":785,"title":{},"body":{"index.html":{}}}],["getalltodos",{"_index":668,"title":{},"body":{"injectables/TodoService.html":{}}}],["getalltodoscustom",{"_index":669,"title":{},"body":{"injectables/TodoService.html":{}}}],["getalltodoslist",{"_index":434,"title":{},"body":{"components/ListComponent.html":{}}}],["getallusers",{"_index":721,"title":{},"body":{"injectables/UserService.html":{}}}],["getgetuseridlogged",{"_index":734,"title":{},"body":{"injectables/UserService.html":{}}}],["getonepage",{"_index":435,"title":{},"body":{"components/ListComponent.html":{}}}],["getonepage(page",{"_index":449,"title":{},"body":{"components/ListComponent.html":{}}}],["getonepage(page:number",{"_index":511,"title":{},"body":{"components/ListComponent.html":{}}}],["getpagebylink",{"_index":436,"title":{},"body":{"components/ListComponent.html":{}}}],["getpagebylink(param",{"_index":452,"title":{},"body":{"components/ListComponent.html":{}}}],["getpagebyurl",{"_index":437,"title":{},"body":{"components/ListComponent.html":{}}}],["getpagebyurl(url",{"_index":454,"title":{},"body":{"components/ListComponent.html":{}}}],["getparamurl",{"_index":240,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["getregisterformcontrol",{"_index":299,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["getting",{"_index":780,"title":{"index.html":{}},"body":{}}],["gettodo",{"_index":241,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["gettodo(id",{"_index":266,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["gettodo(id:number",{"_index":338,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["gettodobyid",{"_index":670,"title":{},"body":{"injectables/TodoService.html":{}}}],["gettodobyid(id",{"_index":682,"title":{},"body":{"injectables/TodoService.html":{}}}],["gettodobyid(id:number",{"_index":703,"title":{},"body":{"injectables/TodoService.html":{}}}],["gettodobyuserid",{"_index":671,"title":{},"body":{"injectables/TodoService.html":{}}}],["gettodobyuserid(id",{"_index":684,"title":{},"body":{"injectables/TodoService.html":{}}}],["gettodobyuserid(id:number",{"_index":699,"title":{},"body":{"injectables/TodoService.html":{}}}],["gettodosbyuserid",{"_index":438,"title":{},"body":{"components/ListComponent.html":{}}}],["gettodosbyuserid(id",{"_index":457,"title":{},"body":{"components/ListComponent.html":{}}}],["gettodospagination",{"_index":672,"title":{},"body":{"injectables/TodoService.html":{}}}],["gettodospagination(page",{"_index":686,"title":{},"body":{"injectables/TodoService.html":{}}}],["gettodospagination(page:number",{"_index":696,"title":{},"body":{"injectables/TodoService.html":{}}}],["gettodospaginationbyurl",{"_index":673,"title":{},"body":{"injectables/TodoService.html":{}}}],["gettodospaginationbyurl(url",{"_index":689,"title":{},"body":{"injectables/TodoService.html":{}}}],["getuser",{"_index":242,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["getuserbyid",{"_index":722,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserbyid(id",{"_index":729,"title":{},"body":{"injectables/UserService.html":{}}}],["getuseridlogged",{"_index":723,"title":{},"body":{"injectables/UserService.html":{}}}],["getusers",{"_index":243,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["go",{"_index":398,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["graph",{"_index":836,"title":{},"body":{"modules.html":{}}}],["gt",{"_index":578,"title":{},"body":{"components/ListComponent.html":{}}}],["gt;&gt",{"_index":579,"title":{},"body":{"components/ListComponent.html":{}}}],["guard",{"_index":133,"title":{"guards/AuthGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":135,"title":{},"body":{"guards/AuthGuard.html":{}}}],["happen",{"_index":549,"title":{},"body":{"components/ListComponent.html":{}}}],["header",{"_index":400,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header'},{'name",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/EditCreateComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{}}}],["header.component.css",{"_index":401,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.html",{"_index":402,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercomponent",{"_index":68,"title":{"components/HeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditCreateComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"coverage.html":{},"overview.html":{}}}],["headers",{"_index":186,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["heading",{"_index":584,"title":{},"body":{"components/ListComponent.html":{}}}],["here",{"_index":374,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["home",{"_index":217,"title":{},"body":{"modules/ComponentsRoutingModule.html":{},"components/HomeComponent.html":{}}}],["home'},{'name",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/EditCreateComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{}}}],["home.component.css",{"_index":412,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.html",{"_index":413,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":70,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/ComponentsModule.html":{},"modules/ComponentsRoutingModule.html":{},"components/EditCreateComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"coverage.html":{},"overview.html":{}}}],["html",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/EditCreateComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{}}}],["http",{"_index":823,"title":{},"body":{"index.html":{}}}],["http://localhost:8080/api",{"_index":852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http_interceptors",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":675,"title":{},"body":{"injectables/TodoService.html":{},"injectables/UserService.html":{}}}],["httpclientmodule",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorresponse",{"_index":182,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httpevent",{"_index":180,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httphandler",{"_index":174,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httpheaders",{"_index":181,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httpinterceptor",{"_index":179,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httprequest",{"_index":172,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["https://jsonplaceholder.typicode.com",{"_index":854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i+1",{"_index":577,"title":{},"body":{"components/ListComponent.html":{}}}],["id",{"_index":11,"title":{},"body":{"classes/Address.html":{},"components/EditCreateComponent.html":{},"components/ListComponent.html":{},"classes/Todo.html":{},"classes/TodoCustom.html":{},"injectables/TodoService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":745,"title":{},"body":{"coverage.html":{}}}],["idx",{"_index":446,"title":{},"body":{"components/ListComponent.html":{}}}],["if(this.todoform.valid",{"_index":363,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["implements",{"_index":156,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/EditCreateComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{}}}],["import",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/ComponentsModule.html":{},"modules/ComponentsRoutingModule.html":{},"components/EditCreateComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"modules/SharedModuleModule.html":{},"classes/TodoCustom.html":{},"injectables/TodoService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["import('src/app/components/components.module').then(m",{"_index":129,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["imports",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ComponentsModule.html":{},"modules/ComponentsRoutingModule.html":{},"modules/SharedModuleModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"classes/Address.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/EditCreateComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"classes/LoginDto.html":{},"classes/Todo.html":{},"classes/TodoCustom.html":{},"injectables/TodoService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/Address.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/ComponentsModule.html":{},"modules/ComponentsRoutingModule.html":{},"components/EditCreateComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"classes/LoginDto.html":{},"modules/SharedModuleModule.html":{},"classes/Todo.html":{},"classes/TodoCustom.html":{},"injectables/TodoService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["inicializeform",{"_index":244,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["inicializeformuserid",{"_index":439,"title":{},"body":{"components/ListComponent.html":{}}}],["injectable",{"_index":153,"title":{"injectables/TodoService.html":{},"injectables/UserService.html":{}},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/TodoService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":665,"title":{},"body":{"injectables/TodoService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["inner",{"_index":604,"title":{},"body":{"components/ListComponent.html":{}}}],["input",{"_index":599,"title":{},"body":{"components/ListComponent.html":{}}}],["input[type=number",{"_index":609,"title":{},"body":{"components/ListComponent.html":{}}}],["install",{"_index":808,"title":{},"body":{"index.html":{}}}],["installed",{"_index":815,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":168,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["intercept(request",{"_index":171,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["interceptor",{"_index":165,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":166,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["invalid",{"_index":640,"title":{},"body":{"components/LoginComponent.html":{}}}],["ir",{"_index":642,"title":{},"body":{"components/LoginComponent.html":{}}}],["iscreate",{"_index":229,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["isgoodid",{"_index":556,"title":{},"body":{"components/ListComponent.html":{}}}],["ispagination",{"_index":427,"title":{},"body":{"components/ListComponent.html":{}}}],["issubmitted",{"_index":230,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["java",{"_index":796,"title":{},"body":{"index.html":{}}}],["jquery",{"_index":771,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":803,"title":{},"body":{"index.html":{}}}],["last",{"_index":495,"title":{},"body":{"components/ListComponent.html":{}}}],["legend",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/EditCreateComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{}}}],["length",{"_index":392,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["linkspagination",{"_index":428,"title":{},"body":{"components/ListComponent.html":{}}}],["list",{"_index":216,"title":{},"body":{"modules/ComponentsRoutingModule.html":{},"components/EditCreateComponent.html":{},"components/HeaderComponent.html":{},"components/ListComponent.html":{}}}],["list'},{'name",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/EditCreateComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{}}}],["list.component.css",{"_index":422,"title":{},"body":{"components/ListComponent.html":{}}}],["list.component.html",{"_index":423,"title":{},"body":{"components/ListComponent.html":{}}}],["listcomponent",{"_index":72,"title":{"components/ListComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/ComponentsModule.html":{},"modules/ComponentsRoutingModule.html":{},"components/EditCreateComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"coverage.html":{},"overview.html":{}}}],["lists",{"_index":793,"title":{},"body":{"index.html":{}}}],["literal",{"_index":849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loadchildren",{"_index":128,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["local",{"_index":810,"title":{},"body":{"index.html":{}}}],["localhost",{"_index":824,"title":{},"body":{"index.html":{}}}],["localstorage.getitem(\"accesstoken",{"_index":159,"title":{},"body":{"guards/AuthGuard.html":{}}}],["localstorage.getitem('accesstoken",{"_index":184,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["localstorage.removeitem('accesstoken",{"_index":161,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/HeaderComponent.html":{}}}],["localstorage.removeitem('id",{"_index":196,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/HeaderComponent.html":{}}}],["localstorage.removeitem('username",{"_index":195,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/HeaderComponent.html":{}}}],["localstorage.setitem('accesstoken",{"_index":633,"title":{},"body":{"components/LoginComponent.html":{}}}],["localstorage.setitem('id",{"_index":637,"title":{},"body":{"components/LoginComponent.html":{}}}],["localstorage.setitem('username",{"_index":635,"title":{},"body":{"components/LoginComponent.html":{}}}],["log",{"_index":828,"title":{},"body":{"index.html":{}}}],["logged",{"_index":567,"title":{},"body":{"components/ListComponent.html":{}}}],["login",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/EditCreateComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["login(formdata",{"_index":731,"title":{},"body":{"injectables/UserService.html":{}}}],["login.component.css",{"_index":614,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":615,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/logout",{"_index":407,"title":{},"body":{"components/HeaderComponent.html":{}}}],["logincomponent",{"_index":74,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditCreateComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logindto",{"_index":648,"title":{"classes/LoginDto.html":{}},"body":{"classes/LoginDto.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["loginform",{"_index":616,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":403,"title":{},"body":{"components/HeaderComponent.html":{}}}],["loop",{"_index":489,"title":{},"body":{"components/ListComponent.html":{}}}],["lt",{"_index":576,"title":{},"body":{"components/ListComponent.html":{}}}],["lt;&lt",{"_index":575,"title":{},"body":{"components/ListComponent.html":{}}}],["m.componentsmodule",{"_index":130,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["manage",{"_index":791,"title":{},"body":{"index.html":{}}}],["margin",{"_index":607,"title":{},"body":{"components/ListComponent.html":{}}}],["matching",{"_index":29,"title":{},"body":{"classes/Address.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/ComponentsModule.html":{},"modules/ComponentsRoutingModule.html":{},"components/EditCreateComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"classes/LoginDto.html":{},"modules/SharedModuleModule.html":{},"classes/Todo.html":{},"classes/TodoCustom.html":{},"injectables/TodoService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["messageform",{"_index":617,"title":{},"body":{"components/LoginComponent.html":{}}}],["messagemodaltemplate",{"_index":231,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["metadata",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/EditCreateComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{}}}],["methods",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/EditCreateComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"injectables/TodoService.html":{},"injectables/UserService.html":{}}}],["miscellaneous",{"_index":842,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["modalcreatededited",{"_index":232,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["modaldelete",{"_index":429,"title":{},"body":{"components/ListComponent.html":{}}}],["modalservice",{"_index":254,"title":{},"body":{"components/EditCreateComponent.html":{},"components/ListComponent.html":{}}}],["models/user",{"_index":737,"title":{},"body":{"injectables/UserService.html":{}}}],["modifies",{"_index":551,"title":{},"body":{"components/ListComponent.html":{}}}],["module",{"_index":78,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ComponentsModule.html":{},"modules/ComponentsRoutingModule.html":{},"modules/SharedModuleModule.html":{}},"body":{}}],["module.module.ts",{"_index":654,"title":{},"body":{"modules/SharedModuleModule.html":{}}}],["module/header/header.component",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["module/header/header.component.ts",{"_index":399,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["module/header/header.component.ts:13",{"_index":406,"title":{},"body":{"components/HeaderComponent.html":{}}}],["module/header/header.component.ts:15",{"_index":405,"title":{},"body":{"components/HeaderComponent.html":{}}}],["module/header/header.component.ts:9",{"_index":404,"title":{},"body":{"components/HeaderComponent.html":{}}}],["module/shared",{"_index":653,"title":{},"body":{"modules/SharedModuleModule.html":{}}}],["modules",{"_index":80,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ComponentsModule.html":{},"modules/ComponentsRoutingModule.html":{},"modules/SharedModuleModule.html":{},"modules.html":{},"overview.html":{}}}],["mook_api_base_url",{"_index":853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["move",{"_index":485,"title":{},"body":{"components/ListComponent.html":{}}}],["moz",{"_index":610,"title":{},"body":{"components/ListComponent.html":{}}}],["msg",{"_index":277,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["multi",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["name",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/EditCreateComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"injectables/TodoService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["navigate",{"_index":418,"title":{},"body":{"components/HomeComponent.html":{},"components/ListComponent.html":{}}}],["necessary",{"_index":809,"title":{},"body":{"index.html":{}}}],["need",{"_index":801,"title":{},"body":{"index.html":{}}}],["new",{"_index":187,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/EditCreateComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"classes/TodoCustom.html":{},"classes/User.html":{},"coverage.html":{}}}],["next",{"_index":173,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/ListComponent.html":{}}}],["next.handle(request",{"_index":201,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["next.handle(request).pipe(catcherror((error",{"_index":190,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["ng",{"_index":305,"title":{},"body":{"components/EditCreateComponent.html":{},"components/ListComponent.html":{},"dependencies.html":{},"index.html":{}}}],["ngbmodal",{"_index":255,"title":{},"body":{"components/EditCreateComponent.html":{},"components/ListComponent.html":{}}}],["ngmodule",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ComponentsModule.html":{},"modules/ComponentsRoutingModule.html":{},"modules/SharedModuleModule.html":{}}}],["ngondestroy",{"_index":245,"title":{},"body":{"components/EditCreateComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{}}}],["ngoninit",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/EditCreateComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{}}}],["node",{"_index":802,"title":{},"body":{"index.html":{}}}],["node_modules",{"_index":811,"title":{},"body":{"index.html":{}}}],["none",{"_index":606,"title":{},"body":{"components/ListComponent.html":{}}}],["nothing",{"_index":507,"title":{},"body":{"components/ListComponent.html":{}}}],["npm",{"_index":807,"title":{},"body":{"index.html":{}}}],["null",{"_index":160,"title":{},"body":{"guards/AuthGuard.html":{}}}],["number",{"_index":20,"title":{},"body":{"classes/Address.html":{},"components/EditCreateComponent.html":{},"components/ListComponent.html":{},"classes/Todo.html":{},"classes/TodoCustom.html":{},"injectables/TodoService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["number(id",{"_index":557,"title":{},"body":{"components/ListComponent.html":{}}}],["number(localstorage.getitem('id",{"_index":742,"title":{},"body":{"injectables/UserService.html":{}}}],["number(param.get('id",{"_index":319,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["numberpages",{"_index":430,"title":{},"body":{"components/ListComponent.html":{}}}],["numbers",{"_index":561,"title":{},"body":{"components/ListComponent.html":{}}}],["o",{"_index":817,"title":{},"body":{"index.html":{}}}],["object",{"_index":474,"title":{},"body":{"components/ListComponent.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":149,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{}}}],["observe",{"_index":701,"title":{},"body":{"injectables/TodoService.html":{}}}],["ohmycodetodo",{"_index":782,"title":{},"body":{"index.html":{}}}],["ohmycodetodofront",{"_index":55,"title":{},"body":{"components/AppComponent.html":{}}}],["once",{"_index":813,"title":{},"body":{"index.html":{}}}],["onchangeselectuser",{"_index":246,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["onchangeselectuser(value",{"_index":273,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["onchangeselectuser(value:any",{"_index":381,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["oninit",{"_index":223,"title":{},"body":{"components/EditCreateComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{}}}],["open",{"_index":819,"title":{},"body":{"index.html":{}}}],["opening",{"_index":822,"title":{},"body":{"index.html":{}}}],["openmodalcreatededited",{"_index":247,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["openmodalcreatededited(msg",{"_index":275,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["openmodaldelete",{"_index":440,"title":{},"body":{"components/ListComponent.html":{}}}],["openmodaldelete(id",{"_index":462,"title":{},"body":{"components/ListComponent.html":{}}}],["opera",{"_index":598,"title":{},"body":{"components/ListComponent.html":{}}}],["operation",{"_index":582,"title":{},"body":{"components/ListComponent.html":{}}}],["optional",{"_index":142,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/EditCreateComponent.html":{},"components/HeaderComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"injectables/TodoService.html":{},"injectables/UserService.html":{}}}],["out",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"modules/ComponentsModule.html":{},"overview.html":{}}}],["outer",{"_index":601,"title":{},"body":{"components/ListComponent.html":{}}}],["overview",{"_index":837,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["ownerid",{"_index":727,"title":{},"body":{"injectables/UserService.html":{}}}],["p.split",{"_index":532,"title":{},"body":{"components/ListComponent.html":{}}}],["package",{"_index":764,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":451,"title":{},"body":{"components/ListComponent.html":{},"injectables/TodoService.html":{}}}],["pagination",{"_index":487,"title":{},"body":{"components/ListComponent.html":{}}}],["paging",{"_index":565,"title":{},"body":{"components/ListComponent.html":{}}}],["param",{"_index":317,"title":{},"body":{"components/EditCreateComponent.html":{},"components/ListComponent.html":{}}}],["parameter",{"_index":497,"title":{},"body":{"components/ListComponent.html":{}}}],["parameters",{"_index":141,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/EditCreateComponent.html":{},"components/HeaderComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"injectables/TodoService.html":{},"injectables/UserService.html":{}}}],["paramurlid",{"_index":233,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["parts",{"_index":528,"title":{},"body":{"components/ListComponent.html":{},"index.html":{}}}],["parts.foreach(p",{"_index":530,"title":{},"body":{"components/ListComponent.html":{}}}],["password",{"_index":628,"title":{},"body":{"components/LoginComponent.html":{},"classes/LoginDto.html":{},"index.html":{}}}],["path",{"_index":123,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ComponentsRoutingModule.html":{}}}],["pathmatch",{"_index":126,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ComponentsRoutingModule.html":{}}}],["please",{"_index":352,"title":{},"body":{"components/EditCreateComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{}}}],["pointer",{"_index":410,"title":{},"body":{"components/HeaderComponent.html":{}}}],["popper.js",{"_index":773,"title":{},"body":{"dependencies.html":{}}}],["prev",{"_index":493,"title":{},"body":{"components/ListComponent.html":{}}}],["private",{"_index":157,"title":{},"body":{"guards/AuthGuard.html":{},"components/EditCreateComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["production",{"_index":850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":784,"title":{},"body":{"index.html":{}}}],["promise",{"_index":150,"title":{},"body":{"guards/AuthGuard.html":{}}}],["prooftodobackend\\src\\main\\resources\\data.sql",{"_index":832,"title":{},"body":{"index.html":{}}}],["properties",{"_index":8,"title":{},"body":{"classes/Address.html":{},"components/AppComponent.html":{},"components/EditCreateComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"classes/LoginDto.html":{},"classes/Todo.html":{},"classes/TodoCustom.html":{},"injectables/TodoService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["provide",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":155,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/TodoService.html":{},"injectables/UserService.html":{}}}],["providers",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["public",{"_index":227,"title":{},"body":{"components/EditCreateComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"injectables/TodoService.html":{},"injectables/UserService.html":{}}}],["r",{"_index":379,"title":{},"body":{"components/EditCreateComponent.html":{},"components/ListComponent.html":{}}}],["rawlinks",{"_index":466,"title":{},"body":{"components/ListComponent.html":{}}}],["rawlinks.length",{"_index":526,"title":{},"body":{"components/ListComponent.html":{}}}],["rawlinks.split",{"_index":529,"title":{},"body":{"components/ListComponent.html":{}}}],["reactiveformsmodule",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"modules/ComponentsModule.html":{},"modules/SharedModuleModule.html":{}}}],["redirectto",{"_index":124,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ComponentsRoutingModule.html":{}}}],["registerformcontrol",{"_index":251,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["request",{"_index":176,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["request.clone",{"_index":185,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["require",{"_index":761,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":391,"title":{},"body":{"components/EditCreateComponent.html":{},"components/LoginComponent.html":{}}}],["requirements",{"_index":798,"title":{},"body":{"index.html":{}}}],["res",{"_index":342,"title":{},"body":{"components/EditCreateComponent.html":{},"components/ListComponent.html":{}}}],["res.body['content",{"_index":516,"title":{},"body":{"components/ListComponent.html":{}}}],["res:todocustom",{"_index":340,"title":{},"body":{"components/EditCreateComponent.html":{},"components/ListComponent.html":{}}}],["res['accesstoken",{"_index":634,"title":{},"body":{"components/LoginComponent.html":{}}}],["res['headers'].get('link",{"_index":519,"title":{},"body":{"components/ListComponent.html":{}}}],["res['id",{"_index":638,"title":{},"body":{"components/LoginComponent.html":{}}}],["res['username",{"_index":636,"title":{},"body":{"components/LoginComponent.html":{}}}],["reset",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"modules/ComponentsModule.html":{},"overview.html":{}}}],["response",{"_index":702,"title":{},"body":{"injectables/TodoService.html":{}}}],["result",{"_index":28,"title":{},"body":{"classes/Address.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/ComponentsModule.html":{},"modules/ComponentsRoutingModule.html":{},"components/EditCreateComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"classes/LoginDto.html":{},"modules/SharedModuleModule.html":{},"classes/Todo.html":{},"classes/TodoCustom.html":{},"injectables/TodoService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":30,"title":{},"body":{"classes/Address.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/ComponentsModule.html":{},"modules/ComponentsRoutingModule.html":{},"components/EditCreateComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"classes/LoginDto.html":{},"modules/SharedModuleModule.html":{},"classes/Todo.html":{},"classes/TodoCustom.html":{},"injectables/TodoService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":163,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/EditCreateComponent.html":{},"injectables/TodoService.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/EditCreateComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"injectables/TodoService.html":{},"injectables/UserService.html":{}}}],["rgb(230",{"_index":645,"title":{},"body":{"components/LoginComponent.html":{}}}],["root",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/TodoService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["root'},{'name",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/EditCreateComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{}}}],["route",{"_index":148,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{}}}],["router",{"_index":139,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/EditCreateComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["routermodule",{"_index":119,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ComponentsRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":221,"title":{},"body":{"modules/ComponentsRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":131,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":146,"title":{},"body":{"guards/AuthGuard.html":{}}}],["routes",{"_index":120,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/ComponentsRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"modules/ComponentsModule.html":{}}}],["routing.module.ts",{"_index":118,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ComponentsRoutingModule.html":{}}}],["run",{"_index":806,"title":{},"body":{"index.html":{}}}],["running",{"_index":800,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":154,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/EditCreateComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":178,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/EditCreateComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{}}}],["safari",{"_index":596,"title":{},"body":{"components/ListComponent.html":{}}}],["saveform",{"_index":248,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["section",{"_index":531,"title":{},"body":{"components/ListComponent.html":{}}}],["section[0].replace",{"_index":533,"title":{},"body":{"components/ListComponent.html":{}}}],["section[1].replace(/rel",{"_index":535,"title":{},"body":{"components/ListComponent.html":{}}}],["select",{"_index":386,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["selector",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/EditCreateComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{}}}],["serve",{"_index":816,"title":{},"body":{"index.html":{}}}],["server",{"_index":805,"title":{},"body":{"index.html":{}}}],["service",{"_index":350,"title":{},"body":{"components/EditCreateComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{}}}],["setformtodo",{"_index":249,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["setformtodo(todo",{"_index":279,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["setformtodo(todo:todocustom",{"_index":357,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["setlinksfromheader",{"_index":441,"title":{},"body":{"components/ListComponent.html":{}}}],["setlinksfromheader(rawlinks",{"_index":464,"title":{},"body":{"components/ListComponent.html":{}}}],["sharedmodulemodule",{"_index":652,"title":{"modules/SharedModuleModule.html":{}},"body":{"modules/SharedModuleModule.html":{},"modules.html":{}}}],["shouldn't",{"_index":548,"title":{},"body":{"components/ListComponent.html":{}}}],["show",{"_index":490,"title":{},"body":{"components/ListComponent.html":{}}}],["showpaginationandgetfirstpage",{"_index":442,"title":{},"body":{"components/ListComponent.html":{}}}],["sign",{"_index":643,"title":{},"body":{"components/LoginComponent.html":{}}}],["size",{"_index":687,"title":{},"body":{"injectables/TodoService.html":{}}}],["size:number",{"_index":697,"title":{},"body":{"injectables/TodoService.html":{}}}],["size_page",{"_index":431,"title":{},"body":{"components/ListComponent.html":{}}}],["something",{"_index":521,"title":{},"body":{"components/ListComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/Address.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/ComponentsModule.html":{},"modules/ComponentsRoutingModule.html":{},"components/EditCreateComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"classes/LoginDto.html":{},"modules/SharedModuleModule.html":{},"classes/Todo.html":{},"classes/TodoCustom.html":{},"injectables/TodoService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["spec\\.ts",{"_index":848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specific",{"_index":510,"title":{},"body":{"components/ListComponent.html":{}}}],["spin",{"_index":602,"title":{},"body":{"components/ListComponent.html":{}}}],["spring",{"_index":797,"title":{},"body":{"index.html":{}}}],["src/.../environment.prod.ts",{"_index":846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":117,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":52,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:9",{"_index":51,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/components",{"_index":214,"title":{},"body":{"modules/ComponentsRoutingModule.html":{}}}],["src/app/components/components.module.ts",{"_index":205,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["src/app/components/login/login.component.ts",{"_index":613,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/components/login/login.component.ts:14",{"_index":618,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:18",{"_index":622,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:20",{"_index":623,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:22",{"_index":624,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:24",{"_index":621,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:31",{"_index":619,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:54",{"_index":620,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/todo/edit",{"_index":211,"title":{},"body":{"modules/ComponentsModule.html":{},"modules/ComponentsRoutingModule.html":{},"components/EditCreateComponent.html":{},"coverage.html":{}}}],["src/app/components/todo/home/home.component",{"_index":210,"title":{},"body":{"modules/ComponentsModule.html":{},"modules/ComponentsRoutingModule.html":{}}}],["src/app/components/todo/home/home.component.ts",{"_index":411,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/components/todo/home/home.component.ts:12",{"_index":415,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/todo/home/home.component.ts:8",{"_index":414,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/todo/list/list.component",{"_index":209,"title":{},"body":{"modules/ComponentsModule.html":{},"modules/ComponentsRoutingModule.html":{}}}],["src/app/components/todo/list/list.component.ts",{"_index":421,"title":{},"body":{"components/ListComponent.html":{},"coverage.html":{}}}],["src/app/components/todo/list/list.component.ts:102",{"_index":465,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/components/todo/list/list.component.ts:115",{"_index":448,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/components/todo/list/list.component.ts:133",{"_index":458,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/components/todo/list/list.component.ts:151",{"_index":467,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/components/todo/list/list.component.ts:160",{"_index":463,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/components/todo/list/list.component.ts:168",{"_index":447,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/components/todo/list/list.component.ts:17",{"_index":476,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/components/todo/list/list.component.ts:188",{"_index":459,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/components/todo/list/list.component.ts:19",{"_index":469,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/components/todo/list/list.component.ts:20",{"_index":470,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/components/todo/list/list.component.ts:208",{"_index":460,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/components/todo/list/list.component.ts:22",{"_index":483,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/components/todo/list/list.component.ts:24",{"_index":472,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/components/todo/list/list.component.ts:26",{"_index":481,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/components/todo/list/list.component.ts:27",{"_index":482,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/components/todo/list/list.component.ts:30",{"_index":471,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/components/todo/list/list.component.ts:31",{"_index":480,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/components/todo/list/list.component.ts:32",{"_index":478,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/components/todo/list/list.component.ts:33",{"_index":473,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/components/todo/list/list.component.ts:34",{"_index":468,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/components/todo/list/list.component.ts:35",{"_index":444,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/components/todo/list/list.component.ts:41",{"_index":461,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/components/todo/list/list.component.ts:49",{"_index":453,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/components/todo/list/list.component.ts:75",{"_index":450,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/components/todo/list/list.component.ts:81",{"_index":455,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/core/guards/auth.guard",{"_index":215,"title":{},"body":{"modules/ComponentsRoutingModule.html":{}}}],["src/app/core/guards/auth.guard.ts",{"_index":136,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/core/guards/auth.guard.ts:11",{"_index":147,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/guards/auth.guard.ts:8",{"_index":140,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/interceptors/auth.interceptor",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/core/interceptors/auth.interceptor.ts",{"_index":167,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"coverage.html":{}}}],["src/app/core/interceptors/auth.interceptor.ts:12",{"_index":175,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/core/interceptors/auth.interceptor.ts:8",{"_index":170,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/models/address",{"_index":717,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/address.ts",{"_index":6,"title":{},"body":{"classes/Address.html":{},"coverage.html":{}}}],["src/app/models/address.ts:2",{"_index":24,"title":{},"body":{"classes/Address.html":{}}}],["src/app/models/address.ts:3",{"_index":25,"title":{},"body":{"classes/Address.html":{}}}],["src/app/models/address.ts:4",{"_index":18,"title":{},"body":{"classes/Address.html":{}}}],["src/app/models/address.ts:5",{"_index":26,"title":{},"body":{"classes/Address.html":{}}}],["src/app/models/address.ts:6",{"_index":19,"title":{},"body":{"classes/Address.html":{}}}],["src/app/models/logindto",{"_index":738,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/models/logindto.ts",{"_index":649,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/app/models/logindto.ts:2",{"_index":651,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/app/models/logindto.ts:3",{"_index":650,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/app/models/todo.ts",{"_index":655,"title":{},"body":{"classes/Todo.html":{},"coverage.html":{}}}],["src/app/models/todo.ts:2",{"_index":657,"title":{},"body":{"classes/Todo.html":{}}}],["src/app/models/todo.ts:3",{"_index":659,"title":{},"body":{"classes/Todo.html":{}}}],["src/app/models/todo.ts:4",{"_index":658,"title":{},"body":{"classes/Todo.html":{}}}],["src/app/models/todo.ts:5",{"_index":656,"title":{},"body":{"classes/Todo.html":{}}}],["src/app/models/todocustom",{"_index":309,"title":{},"body":{"components/EditCreateComponent.html":{},"components/ListComponent.html":{},"injectables/TodoService.html":{}}}],["src/app/models/todocustom.ts",{"_index":660,"title":{},"body":{"classes/TodoCustom.html":{},"coverage.html":{}}}],["src/app/models/todocustom.ts:3",{"_index":662,"title":{},"body":{"classes/TodoCustom.html":{}}}],["src/app/models/todocustom.ts:4",{"_index":663,"title":{},"body":{"classes/TodoCustom.html":{}}}],["src/app/models/todocustom.ts:5",{"_index":664,"title":{},"body":{"classes/TodoCustom.html":{}}}],["src/app/models/todocustom.ts:6",{"_index":661,"title":{},"body":{"classes/TodoCustom.html":{}}}],["src/app/models/user",{"_index":310,"title":{},"body":{"components/EditCreateComponent.html":{},"classes/TodoCustom.html":{}}}],["src/app/models/user.ts",{"_index":710,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/app/models/user.ts:3",{"_index":714,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:4",{"_index":716,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:5",{"_index":715,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:6",{"_index":713,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:7",{"_index":712,"title":{},"body":{"classes/User.html":{}}}],["src/app/services/todo.service",{"_index":307,"title":{},"body":{"components/EditCreateComponent.html":{},"components/ListComponent.html":{}}}],["src/app/services/todo.service.ts",{"_index":666,"title":{},"body":{"injectables/TodoService.html":{},"coverage.html":{}}}],["src/app/services/todo.service.ts:10",{"_index":676,"title":{},"body":{"injectables/TodoService.html":{}}}],["src/app/services/todo.service.ts:14",{"_index":680,"title":{},"body":{"injectables/TodoService.html":{}}}],["src/app/services/todo.service.ts:19",{"_index":688,"title":{},"body":{"injectables/TodoService.html":{}}}],["src/app/services/todo.service.ts:24",{"_index":681,"title":{},"body":{"injectables/TodoService.html":{}}}],["src/app/services/todo.service.ts:29",{"_index":685,"title":{},"body":{"injectables/TodoService.html":{}}}],["src/app/services/todo.service.ts:34",{"_index":690,"title":{},"body":{"injectables/TodoService.html":{}}}],["src/app/services/todo.service.ts:38",{"_index":683,"title":{},"body":{"injectables/TodoService.html":{}}}],["src/app/services/todo.service.ts:43",{"_index":677,"title":{},"body":{"injectables/TodoService.html":{}}}],["src/app/services/todo.service.ts:48",{"_index":679,"title":{},"body":{"injectables/TodoService.html":{}}}],["src/app/services/todo.service.ts:53",{"_index":678,"title":{},"body":{"injectables/TodoService.html":{}}}],["src/app/services/user.service",{"_index":308,"title":{},"body":{"components/EditCreateComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{}}}],["src/app/services/user.service.ts",{"_index":719,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/services/user.service.ts:13",{"_index":724,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:17",{"_index":732,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:22",{"_index":728,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:27",{"_index":730,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:32",{"_index":735,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:36",{"_index":726,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/shared",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"components/HeaderComponent.html":{},"modules/SharedModuleModule.html":{},"coverage.html":{}}}],["src/environments/environment",{"_index":736,"title":{},"body":{"injectables/UserService.html":{}}}],["src/environments/environment.prod.ts",{"_index":755,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":758,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":759,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":821,"title":{},"body":{"index.html":{}}}],["started",{"_index":781,"title":{"index.html":{}},"body":{}}],["state",{"_index":145,"title":{},"body":{"guards/AuthGuard.html":{}}}],["statements",{"_index":746,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":290,"title":{},"body":{"components/EditCreateComponent.html":{},"components/ListComponent.html":{}}}],["stay",{"_index":373,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["street",{"_index":12,"title":{},"body":{"classes/Address.html":{},"components/ListComponent.html":{}}}],["string",{"_index":16,"title":{},"body":{"classes/Address.html":{},"components/AppComponent.html":{},"components/EditCreateComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"classes/LoginDto.html":{},"classes/Todo.html":{},"classes/TodoCustom.html":{},"injectables/TodoService.html":{},"classes/User.html":{}}}],["styles",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/EditCreateComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{}}}],["styleurls",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/EditCreateComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{}}}],["subject",{"_index":281,"title":{},"body":{"components/EditCreateComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{}}}],["submit",{"_index":395,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["subscribe(res",{"_index":632,"title":{},"body":{"components/LoginComponent.html":{}}}],["successfully",{"_index":396,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["support",{"_index":833,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":581,"title":{},"body":{"components/ListComponent.html":{}}}],["svg",{"_index":834,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":563,"title":{},"body":{"components/ListComponent.html":{}}}],["table",{"_index":763,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":762,"title":{},"body":{"coverage.html":{}}}],["takeuntil",{"_index":302,"title":{},"body":{"components/EditCreateComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{}}}],["task",{"_index":792,"title":{},"body":{"index.html":{}}}],["template",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/EditCreateComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{}}}],["templateref",{"_index":287,"title":{},"body":{"components/EditCreateComponent.html":{},"components/ListComponent.html":{}}}],["templateurl",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/EditCreateComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{}}}],["testing",{"_index":826,"title":{},"body":{"index.html":{}}}],["text",{"_index":589,"title":{},"body":{"components/ListComponent.html":{}}}],["textfield",{"_index":611,"title":{},"body":{"components/ListComponent.html":{}}}],["textunderline",{"_index":592,"title":{},"body":{"components/ListComponent.html":{}}}],["this.activateroute.parammap.subscribe",{"_index":316,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["this.base_url}/auth/login",{"_index":739,"title":{},"body":{"injectables/UserService.html":{}}}],["this.base_url}/todos",{"_index":694,"title":{},"body":{"injectables/TodoService.html":{}}}],["this.base_url}/todos/${id",{"_index":704,"title":{},"body":{"injectables/TodoService.html":{}}}],["this.base_url}/todos/${todo.id",{"_index":706,"title":{},"body":{"injectables/TodoService.html":{}}}],["this.base_url}/todos/page/?page=${page}&size=${size",{"_index":698,"title":{},"body":{"injectables/TodoService.html":{}}}],["this.base_url}/todos/userid/${id",{"_index":700,"title":{},"body":{"injectables/TodoService.html":{}}}],["this.base_url}/user",{"_index":740,"title":{},"body":{"injectables/UserService.html":{}}}],["this.base_url}/user/${id",{"_index":741,"title":{},"body":{"injectables/UserService.html":{}}}],["this.createtodo(this.todoform.value",{"_index":364,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["this.currentpage",{"_index":500,"title":{},"body":{"components/ListComponent.html":{}}}],["this.deletetodo(id",{"_index":543,"title":{},"body":{"components/ListComponent.html":{}}}],["this.destroy$.complete",{"_index":385,"title":{},"body":{"components/EditCreateComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{}}}],["this.destroy$.next",{"_index":384,"title":{},"body":{"components/EditCreateComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{}}}],["this.edittodo(this.todoform.value",{"_index":365,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["this.errormessage",{"_index":349,"title":{},"body":{"components/EditCreateComponent.html":{},"components/ListComponent.html":{}}}],["this.first_page",{"_index":501,"title":{},"body":{"components/ListComponent.html":{}}}],["this.formuserid",{"_index":552,"title":{},"body":{"components/ListComponent.html":{}}}],["this.formuserid.controls['id'].setvalue(null",{"_index":540,"title":{},"body":{"components/ListComponent.html":{}}}],["this.formuserid.controls['id'].value",{"_index":555,"title":{},"body":{"components/ListComponent.html":{}}}],["this.formuserid.valuechanges.pipe(takeuntil(this.destroy$)).subscribe",{"_index":553,"title":{},"body":{"components/ListComponent.html":{}}}],["this.getalltodoslist",{"_index":491,"title":{},"body":{"components/ListComponent.html":{}}}],["this.getonepage(this.first_page",{"_index":541,"title":{},"body":{"components/ListComponent.html":{}}}],["this.getpagebyurl(param",{"_index":508,"title":{},"body":{"components/ListComponent.html":{}}}],["this.getpagebyurl(url",{"_index":513,"title":{},"body":{"components/ListComponent.html":{}}}],["this.getparamurl",{"_index":314,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["this.gettodo(this.paramurlid",{"_index":321,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["this.gettodosbyuserid(id",{"_index":559,"title":{},"body":{"components/ListComponent.html":{}}}],["this.getuser",{"_index":320,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["this.getusers",{"_index":323,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["this.httpclient.delete(url",{"_index":709,"title":{},"body":{"injectables/TodoService.html":{}}}],["this.httpclient.get(url",{"_index":695,"title":{},"body":{"injectables/TodoService.html":{},"injectables/UserService.html":{}}}],["this.httpclient.post(url",{"_index":705,"title":{},"body":{"injectables/TodoService.html":{},"injectables/UserService.html":{}}}],["this.httpclient.put(url",{"_index":707,"title":{},"body":{"injectables/TodoService.html":{}}}],["this.inicializeform",{"_index":315,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["this.inicializeformuserid",{"_index":492,"title":{},"body":{"components/ListComponent.html":{}}}],["this.iscreate",{"_index":324,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["this.ispagination",{"_index":539,"title":{},"body":{"components/ListComponent.html":{}}}],["this.issubmitted",{"_index":362,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["this.links",{"_index":558,"title":{},"body":{"components/ListComponent.html":{}}}],["this.linkspagination",{"_index":527,"title":{},"body":{"components/ListComponent.html":{}}}],["this.linkspagination['first",{"_index":499,"title":{},"body":{"components/ListComponent.html":{}}}],["this.linkspagination['last",{"_index":505,"title":{},"body":{"components/ListComponent.html":{}}}],["this.linkspagination['next",{"_index":504,"title":{},"body":{"components/ListComponent.html":{}}}],["this.linkspagination['prev",{"_index":502,"title":{},"body":{"components/ListComponent.html":{}}}],["this.linkspagination[name",{"_index":536,"title":{},"body":{"components/ListComponent.html":{}}}],["this.loginform",{"_index":626,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.valid",{"_index":630,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.messageform",{"_index":639,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.messagemodaltemplate",{"_index":377,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["this.modalservice.open(this.modalcreatededited).result.then",{"_index":378,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["this.modalservice.open(this.modaldelete).result.then",{"_index":542,"title":{},"body":{"components/ListComponent.html":{}}}],["this.numberpages",{"_index":517,"title":{},"body":{"components/ListComponent.html":{}}}],["this.numberpages.length",{"_index":506,"title":{},"body":{"components/ListComponent.html":{}}}],["this.openmodalcreatededited('do",{"_index":368,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["this.paramurlid",{"_index":318,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["this.route.navigatebyurl('/login",{"_index":197,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["this.router.navigatebyurl('/list",{"_index":325,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["this.router.navigatebyurl('/login",{"_index":162,"title":{},"body":{"guards/AuthGuard.html":{},"components/HeaderComponent.html":{}}}],["this.router.navigatebyurl('todo/list",{"_index":380,"title":{},"body":{"components/EditCreateComponent.html":{},"components/LoginComponent.html":{}}}],["this.setformtodo(this.todo",{"_index":344,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["this.setlinksfromheader(rawlinks",{"_index":520,"title":{},"body":{"components/ListComponent.html":{}}}],["this.titletemplate",{"_index":322,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["this.todo",{"_index":341,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["this.todo.completed",{"_index":337,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["this.todo.id",{"_index":327,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["this.todo.title",{"_index":334,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["this.todo.user.id",{"_index":333,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["this.todocustom",{"_index":515,"title":{},"body":{"components/ListComponent.html":{}}}],["this.todocustom.splice(idx",{"_index":545,"title":{},"body":{"components/ListComponent.html":{}}}],["this.todoform",{"_index":326,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["this.todoform.controls",{"_index":383,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["this.todoform.controls['completed'].setvalue(todo.completed",{"_index":361,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["this.todoform.controls['id'].setvalue(todo.id",{"_index":358,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["this.todoform.controls['title'].setvalue(todo.title",{"_index":360,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["this.todoform.controls['userid'].setvalue(todo.user.id",{"_index":359,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["this.todoform.controls['userid'].setvalue(value",{"_index":382,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["this.todoservice.base_url}/todos/page/?page=${page}&size=${this.size_page",{"_index":512,"title":{},"body":{"components/ListComponent.html":{}}}],["this.todoservice.createtodo(todo).pipe(takeuntil(this.destroy$)).subscribe",{"_index":367,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["this.todoservice.deletetodo(id).pipe(takeuntil(this.destroy$)).subscribe",{"_index":544,"title":{},"body":{"components/ListComponent.html":{}}}],["this.todoservice.edittodo(todo).pipe(takeuntil(this.destroy$)).subscribe",{"_index":372,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["this.todoservice.getalltodoscustom().pipe(takeuntil(this.destroy$)).subscribe",{"_index":537,"title":{},"body":{"components/ListComponent.html":{}}}],["this.todoservice.gettodobyid(id).pipe(takeuntil(this.destroy$)).subscribe",{"_index":339,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["this.todoservice.gettodobyuserid(number(id)).pipe(takeuntil(this.destroy$)).subscribe",{"_index":538,"title":{},"body":{"components/ListComponent.html":{}}}],["this.todoservice.gettodospaginationbyurl(url).pipe(takeuntil(this.destroy$)).subscribe",{"_index":514,"title":{},"body":{"components/ListComponent.html":{}}}],["this.useridlogged",{"_index":312,"title":{},"body":{"components/EditCreateComponent.html":{},"components/ListComponent.html":{}}}],["this.users",{"_index":348,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["this.users.push(res",{"_index":356,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["this.userservice.checkhaspermissionmodidy(this.todo.user.id",{"_index":343,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["this.userservice.getallusers().pipe(takeuntil(this.destroy$)).subscribe",{"_index":347,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["this.userservice.getuserbyid(this.useridlogged).pipe(takeuntil(this.destroy$)).subscribe",{"_index":355,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["this.userservice.getuseridlogged",{"_index":313,"title":{},"body":{"components/EditCreateComponent.html":{},"components/ListComponent.html":{}}}],["this.userservice.login(this.loginform.value).pipe(takeuntil(this.destroy",{"_index":631,"title":{},"body":{"components/LoginComponent.html":{}}}],["times",{"_index":580,"title":{},"body":{"components/ListComponent.html":{}}}],["title",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/EditCreateComponent.html":{},"components/ListComponent.html":{},"classes/Todo.html":{},"classes/TodoCustom.html":{}}}],["titletemplate",{"_index":234,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["todo",{"_index":125,"title":{"classes/Todo.html":{}},"body":{"modules/AppRoutingModule.html":{},"components/EditCreateComponent.html":{},"components/HeaderComponent.html":{},"components/ListComponent.html":{},"classes/Todo.html":{},"injectables/TodoService.html":{},"coverage.html":{}}}],["todo.completed",{"_index":574,"title":{},"body":{"components/ListComponent.html":{}}}],["todo.title",{"_index":570,"title":{},"body":{"components/ListComponent.html":{}}}],["todo.user.addressentity.city",{"_index":572,"title":{},"body":{"components/ListComponent.html":{}}}],["todo.user.addressentity.street",{"_index":573,"title":{},"body":{"components/ListComponent.html":{}}}],["todo.user.username",{"_index":571,"title":{},"body":{"components/ListComponent.html":{}}}],["todocustom",{"_index":261,"title":{"classes/TodoCustom.html":{}},"body":{"components/EditCreateComponent.html":{},"components/ListComponent.html":{},"classes/TodoCustom.html":{},"injectables/TodoService.html":{},"coverage.html":{}}}],["todocustomtemp",{"_index":432,"title":{},"body":{"components/ListComponent.html":{}}}],["todoform",{"_index":235,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["todos",{"_index":417,"title":{},"body":{"components/HomeComponent.html":{},"components/ListComponent.html":{},"index.html":{}}}],["todoservice",{"_index":256,"title":{"injectables/TodoService.html":{}},"body":{"components/EditCreateComponent.html":{},"components/ListComponent.html":{},"injectables/TodoService.html":{},"coverage.html":{}}}],["token",{"_index":158,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{}}}],["top",{"_index":419,"title":{},"body":{"components/HomeComponent.html":{}}}],["tree",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/EditCreateComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{}}}],["true",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/EditCreateComponent.html":{},"components/ListComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":353,"title":{},"body":{"components/EditCreateComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{}}}],["tslib",{"_index":776,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":794,"title":{},"body":{"index.html":{}}}],["type",{"_index":14,"title":{},"body":{"classes/Address.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/EditCreateComponent.html":{},"components/HeaderComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"classes/LoginDto.html":{},"classes/Todo.html":{},"classes/TodoCustom.html":{},"injectables/TodoService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["underline",{"_index":594,"title":{},"body":{"components/ListComponent.html":{}}}],["undone",{"_index":583,"title":{},"body":{"components/ListComponent.html":{}}}],["unless",{"_index":550,"title":{},"body":{"components/ListComponent.html":{}}}],["url",{"_index":456,"title":{},"body":{"components/ListComponent.html":{},"injectables/TodoService.html":{},"injectables/UserService.html":{}}}],["urltree",{"_index":152,"title":{},"body":{"guards/AuthGuard.html":{}}}],["useclass",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["useful",{"_index":498,"title":{},"body":{"components/ListComponent.html":{}}}],["user",{"_index":298,"title":{"classes/User.html":{}},"body":{"components/EditCreateComponent.html":{},"components/ListComponent.html":{},"classes/TodoCustom.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["user's",{"_index":569,"title":{},"body":{"components/ListComponent.html":{}}}],["user.addressentity.city",{"_index":389,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["user.id",{"_index":387,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["user.name",{"_index":388,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["user\\'s",{"_index":612,"title":{},"body":{"components/ListComponent.html":{}}}],["userid",{"_index":332,"title":{},"body":{"components/EditCreateComponent.html":{},"classes/Todo.html":{}}}],["useridlogged",{"_index":236,"title":{},"body":{"components/EditCreateComponent.html":{},"components/ListComponent.html":{},"injectables/UserService.html":{}}}],["username",{"_index":568,"title":{},"body":{"components/ListComponent.html":{},"components/LoginComponent.html":{},"classes/LoginDto.html":{},"classes/User.html":{},"index.html":{}}}],["users",{"_index":237,"title":{},"body":{"components/EditCreateComponent.html":{},"components/ListComponent.html":{},"index.html":{}}}],["userservice",{"_index":257,"title":{"injectables/UserService.html":{}},"body":{"components/EditCreateComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userservice:userservice",{"_index":625,"title":{},"body":{"components/LoginComponent.html":{}}}],["utils",{"_index":486,"title":{},"body":{"components/ListComponent.html":{}}}],["valid",{"_index":829,"title":{},"body":{"index.html":{}}}],["validators",{"_index":304,"title":{},"body":{"components/EditCreateComponent.html":{},"components/LoginComponent.html":{}}}],["validators.maxlength(199",{"_index":335,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["validators.minlength(1",{"_index":331,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["validators.pattern(\"^[0",{"_index":329,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["validators.required",{"_index":328,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["value",{"_index":22,"title":{},"body":{"classes/Address.html":{},"components/AppComponent.html":{},"components/EditCreateComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"classes/Todo.html":{},"classes/TodoCustom.html":{},"injectables/TodoService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/EditCreateComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{}}}],["variable",{"_index":756,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":843,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":788,"title":{},"body":{"index.html":{}}}],["viewchild",{"_index":301,"title":{},"body":{"components/EditCreateComponent.html":{},"components/ListComponent.html":{}}}],["viewchild(\"modalcreatededited",{"_index":311,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["viewchild(\"modaldelete",{"_index":484,"title":{},"body":{"components/ListComponent.html":{}}}],["viewchild('modalcreatededited",{"_index":289,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["viewchild('modaldelete",{"_index":475,"title":{},"body":{"components/ListComponent.html":{}}}],["void",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/EditCreateComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{}}}],["want",{"_index":369,"title":{},"body":{"components/EditCreateComponent.html":{}}}],["webkit",{"_index":600,"title":{},"body":{"components/ListComponent.html":{}}}],["weight",{"_index":586,"title":{},"body":{"components/ListComponent.html":{},"components/LoginComponent.html":{}}}],["welcome",{"_index":416,"title":{},"body":{"components/HomeComponent.html":{}}}],["went",{"_index":522,"title":{},"body":{"components/ListComponent.html":{}}}],["working",{"_index":192,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["wrong",{"_index":523,"title":{},"body":{"components/ListComponent.html":{}}}],["yes",{"_index":397,"title":{},"body":{"components/EditCreateComponent.html":{},"components/ListComponent.html":{}}}],["zipcode",{"_index":13,"title":{},"body":{"classes/Address.html":{}}}],["zone.js",{"_index":778,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"modules/ComponentsModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/Address.html":{"url":"classes/Address.html","title":"class - Address","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Address\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/Address.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                city\n                            \n                            \n                                country\n                            \n                            \n                                id\n                            \n                            \n                                street\n                            \n                            \n                                zipCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/Address.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/Address.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/Address.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        street\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/Address.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        zipCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/Address.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Address {\n    id: number = 0;\n    street: string;\n    city: string;\n    zipCode: string;\n    country: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ohmycodetodofront'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ohmycodetodofront';\n\n  constructor() { }\n\n  ngOnInit(): void { }\n}\n\n    \n\n    \n        \n  \n\n\n  \n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditCreateComponent', 'selector': 'app-edit'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoginComponent', 'selector': 'app-login'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthInterceptor\n\nAuthInterceptor\n\nAppModule -->\n\nAuthInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            LoginComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AuthInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { AuthInterceptor } from 'src/app/core/interceptors/auth.interceptor'\nimport { HeaderComponent } from 'src/app/shared-module/header/header.component';\nimport { LoginComponent } from './components/login/login.component'\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    LoginComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    FormsModule,\n    HttpClientModule,\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true,\n    },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { LoginComponent } from './components/login/login.component';\n\nconst routes: Routes = [\n\n  { path: '', redirectTo: 'todo', pathMatch: 'full' },\n\n  { \n    path: 'todo', \n    loadChildren:() => \n      \"import('src/app/components/components.module').then(m=> m.ComponentsModule)\" \n  },\n\n  { path: 'login', component: LoginComponent },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guards/auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/guards/auth.guard.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/guards/auth.guard.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor( private router: Router ) {}\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean | UrlTree {\n      let token = localStorage.getItem(\"accessToken\")\n      if (token == null || token == \"\"){\n        localStorage.removeItem('accessToken');\n        this.router.navigateByUrl('/login');\n        return false;\n      } else {\n        return true;\n      }\n  }\n  \n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AuthInterceptor.html":{"url":"interceptors/AuthInterceptor.html","title":"interceptor - AuthInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  AuthInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interceptors/auth.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(route: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/interceptors/auth.interceptor.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/interceptors/auth.interceptor.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { catchError } from 'rxjs/operators';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  constructor(private route: Router) {}\n\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n\n    const token = localStorage.getItem('accessToken') || '';\n\n    if (localStorage.getItem('accessToken')) {\n      request = request.clone(\n        {\n          headers: new HttpHeaders({\n            'Authorization': 'Bearer ' + token,\n          })\n        });\n    }\n\n    return next.handle(request).pipe(catchError((error: HttpErrorResponse) => {\n      console.info('[AuthService.ts] working');      \n      if (error.status == 401) {\n        localStorage.removeItem('accessToken');\n        localStorage.removeItem('username');\n        localStorage.removeItem('id');\n        this.route.navigateByUrl('/login')\n      };\n      if (error.status == 404) {\n        console.info('RESOURCE NOT FOUND')\n      };\n      \n      return next.handle(request)\n    }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ComponentsModule.html":{"url":"modules/ComponentsModule.html","title":"module - ComponentsModule","body":"\n                   \n\n\n\n\n    Modules\n    ComponentsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ComponentsModule\n\n\n\ncluster_ComponentsModule_declarations\n\n\n\n\nEditCreateComponent\n\nEditCreateComponent\n\n\n\nComponentsModule\n\nComponentsModule\n\nComponentsModule -->\n\nEditCreateComponent->ComponentsModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nComponentsModule -->\n\nHomeComponent->ComponentsModule\n\n\n\n\n\nListComponent\n\nListComponent\n\nComponentsModule -->\n\nListComponent->ComponentsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/components.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            EditCreateComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            ListComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ComponentsRoutingModule } from './components-routing.module';\nimport { ListComponent } from 'src/app/components/todo/list/list.component';\nimport { HomeComponent } from 'src/app/components/todo/home/home.component';\nimport { EditCreateComponent } from 'src/app/components/todo/edit-create/edit-create.component';\n\n\n@NgModule({\n  declarations: [\n    ListComponent,\n    HomeComponent,\n    EditCreateComponent\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    ComponentsRoutingModule\n  ]\n})\nexport class ComponentsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ComponentsRoutingModule.html":{"url":"modules/ComponentsRoutingModule.html","title":"module - ComponentsRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ComponentsRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/components-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from 'src/app/core/guards/auth.guard';\nimport { HomeComponent } from 'src/app/components/todo/home/home.component';\nimport { ListComponent } from 'src/app/components/todo/list/list.component'\nimport { EditCreateComponent } from 'src/app/components/todo/edit-create/edit-create.component';\n\nconst routes: Routes = [\n\n  { path: '', redirectTo: 'list', pathMatch: 'full' },\n  \n  { path: 'home', component: HomeComponent },\n\n  { path: 'list', component: ListComponent },\n\n  { \n    canActivate: [AuthGuard],\n    path: 'create-edit/:id', \n    component: EditCreateComponent \n  },\n\n  { path: 'create-edit', component: EditCreateComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ComponentsRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditCreateComponent.html":{"url":"components/EditCreateComponent.html","title":"component - EditCreateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EditCreateComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/todo/edit-create/edit-create.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit\n            \n\n            \n                styleUrls\n                ./edit-create.component.css\n            \n\n\n\n            \n                templateUrl\n                ./edit-create.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                    Public\n                                errorMessage\n                            \n                            \n                                    Public\n                                isCreate\n                            \n                            \n                                    Public\n                                isSubmitted\n                            \n                            \n                                    Public\n                                messageModalTemplate\n                            \n                            \n                                modalCreatedEdited\n                            \n                            \n                                    Private\n                                paramUrlId\n                            \n                            \n                                    Public\n                                titleTemplate\n                            \n                            \n                                    Private\n                                todo\n                            \n                            \n                                    Public\n                                todoForm\n                            \n                            \n                                    Public\n                                userIdLogged\n                            \n                            \n                                    Public\n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createTodo\n                            \n                            \n                                    Private\n                                editTodo\n                            \n                            \n                                    Private\n                                getParamUrl\n                            \n                            \n                                    Private\n                                getTodo\n                            \n                            \n                                    Private\n                                getUser\n                            \n                            \n                                    Private\n                                getUsers\n                            \n                            \n                                    Private\n                                inicializeForm\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onChangeSelectUser\n                            \n                            \n                                    Public\n                                openModalCreatedEdited\n                            \n                            \n                                    Public\n                                saveForm\n                            \n                            \n                                    Private\n                                setFormTodo\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    registerFormControl\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activateRoute: ActivatedRoute, router: Router, modalService: NgbModal, todoService: TodoService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/todo/edit-create/edit-create.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activateRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    NgbModal\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        todoService\n                                                  \n                                                        \n                                                                        TodoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        createTodo\n                        \n                    \n                \n            \n            \n                \n                    \n                    createTodo(todo: TodoCustom)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/todo/edit-create/edit-create.component.ts:144\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    todo\n                                    \n                                                TodoCustom\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        editTodo\n                        \n                    \n                \n            \n            \n                \n                    \n                    editTodo(todo: TodoCustom)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/todo/edit-create/edit-create.component.ts:155\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    todo\n                                    \n                                                TodoCustom\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getParamUrl\n                        \n                    \n                \n            \n            \n                \n                    \n                    getParamUrl()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/todo/edit-create/edit-create.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getTodo\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTodo(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/todo/edit-create/edit-create.component.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/todo/edit-create/edit-create.component.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getUsers\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/todo/edit-create/edit-create.component.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        inicializeForm\n                        \n                    \n                \n            \n            \n                \n                    \n                    inicializeForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/todo/edit-create/edit-create.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/todo/edit-create/edit-create.component.ts:192\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/todo/edit-create/edit-create.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onChangeSelectUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    onChangeSelectUser(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/todo/edit-create/edit-create.component.ts:184\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        openModalCreatedEdited\n                        \n                    \n                \n            \n            \n                \n                    \n                    openModalCreatedEdited(msg: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/todo/edit-create/edit-create.component.ts:172\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        saveForm\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/todo/edit-create/edit-create.component.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setFormTodo\n                        \n                    \n                \n            \n            \n                \n                    \n                    setFormTodo(todo: TodoCustom)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/todo/edit-create/edit-create.component.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    todo\n                                    \n                                                TodoCustom\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/todo/edit-create/edit-create.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/todo/edit-create/edit-create.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isCreate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/todo/edit-create/edit-create.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isSubmitted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/todo/edit-create/edit-create.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        messageModalTemplate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/todo/edit-create/edit-create.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modalCreatedEdited\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('modalCreatedEdited', {static: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/todo/edit-create/edit-create.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        paramUrlId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/todo/edit-create/edit-create.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        titleTemplate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/todo/edit-create/edit-create.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        todo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TodoCustom\n\n                    \n                \n                \n                    \n                        Default value : new TodoCustom\n                    \n                \n                    \n                        \n                                Defined in src/app/components/todo/edit-create/edit-create.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        todoForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({})\n                    \n                \n                    \n                        \n                                Defined in src/app/components/todo/edit-create/edit-create.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userIdLogged\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/todo/edit-create/edit-create.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/todo/edit-create/edit-create.component.ts:33\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        registerFormControl\n                    \n                \n\n                \n                    \n                        getregisterFormControl()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/todo/edit-create/edit-create.component.ts:188\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { TodoService } from 'src/app/services/todo.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { TodoCustom } from 'src/app/models/TodoCustom';\nimport { User } from 'src/app/models/User';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit-create.component.html',\n  styleUrls: ['./edit-create.component.css']\n})\nexport class EditCreateComponent implements OnInit {\n  @ViewChild(\"modalCreatedEdited\", { static: false }) modalCreatedEdited: TemplateRef;\n\n  private destroy$ = new Subject();\n  public titleTemplate: string = '';\n  public errorMessage: string = '';\n  public messageModalTemplate: string = '';\n  private paramUrlId: number = 0;\n\n  private todo: TodoCustom = new TodoCustom;\n  public isSubmitted: boolean = false;\n  public isCreate: boolean = false;\n\n  public todoForm: FormGroup = new FormGroup({});\n\n  public userIdLogged: number = 0;\n  public users: User[] = [];\n\n  constructor(private activateRoute: ActivatedRoute,\n    private router: Router,\n    private modalService: NgbModal,\n    private todoService: TodoService,\n    private userService: UserService) { }\n\n  ngOnInit(): void {\n    this.userIdLogged= this.userService.getUserIdLogged;\n    this.getParamUrl();\n    this.inicializeForm();\n  }\n\n  private getParamUrl() {\n    this.activateRoute.paramMap.subscribe( param => {\n          \n      this.paramUrlId = Number(param.get('id'));\n\n      if (this.paramUrlId > 0) {\n        this.getUser();\n        this.getTodo(this.paramUrlId);\n        this.titleTemplate = \"Edit TODO\"\n\n      } else if (this.paramUrlId === 0) {\n        this.getUsers();\n        this.titleTemplate = \"Create TODO\"\n        this.isCreate= true;\n\n      } else this.router.navigateByUrl('/list');\n            \n    });\n  }\n\n  private inicializeForm() {\n    this.todoForm = new FormGroup({\n      id: new FormControl(\n        this.todo.id, \n        [\n          Validators.required,\n          Validators.pattern(\"^[0-9]*$\"),\n          Validators.minLength(1),\n        ]\n      ),\n      userId: new FormControl(\n        this.todo.user.id, \n        [\n          Validators.required,\n          Validators.pattern(\"^[0-9]*$\"),\n        ]\n      ),\n      title: new FormControl(\n        this.todo.title, \n        [\n          Validators.required,\n          Validators.minLength(1),\n          Validators.maxLength(199),\n        ]),\n      completed: new FormControl(\n        this.todo.completed, \n        [\n          Validators.required\n        ]),\n    });\n  }\n\n  private getTodo(id:number) {\n    this.todoService.getTodoById(id).pipe(takeUntil(this.destroy$)).subscribe(\n      (res:TodoCustom)=> {\n        this.todo = res;\n        if (this.userService.checkHasPermissionModidy(this.todo.user.id, this.userIdLogged)) {\n          this.setFormTodo(this.todo);\n        } else this.router.navigateByUrl('/list') // FORBIDDEN\n        \n      }, \n      (error) => this.router.navigateByUrl('/list')\n    );\n  }\n\n  private getUsers() {\n    this.userService.getAllUsers().pipe(takeUntil(this.destroy$)).subscribe(\n      (res: User[])=> this.users = res\n      , (error) => this.errorMessage = \"Service not available, please try again\"\n    );\n  }\n\n  private getUser() {\n    this.userService.getUserById(this.userIdLogged).pipe(takeUntil(this.destroy$)).subscribe(\n      (res: User)=> this.users.push(res)\n\n      , (error) => this.errorMessage = \"Service not available, please try again\"\n      \n    );\n  }\n\n  private setFormTodo(todo:TodoCustom) {\n    this.todoForm.controls['id'].setValue(todo.id);\n    this.todoForm.controls['userId'].setValue(todo.user.id);\n    this.todoForm.controls['title'].setValue(todo.title);\n    this.todoForm.controls['completed'].setValue(todo.completed);\n  }\n\n  public saveForm() {\n    this.isSubmitted = true;\n    if(this.todoForm.valid) {\n      if (this.isCreate) this.createTodo(this.todoForm.value);\n      \n      else this.editTodo(this.todoForm.value);\n    }\n  }\n\n  private createTodo(todo:TodoCustom) {\n    this.todoService.createTodo(todo).pipe(takeUntil(this.destroy$)).subscribe(\n      (res:TodoCustom)=> {\n        this.todo = res;\n        this.openModalCreatedEdited('Do you want to create another?');\n      },\n      (error) => {this.errorMessage = \"Service not available, please try again\";\n      }\n    );\n  }\n\n  private editTodo(todo:TodoCustom){\n    this.todoService.editTodo(todo).pipe(takeUntil(this.destroy$)).subscribe(\n      (res:TodoCustom)=> {\n        this.todo = res;\n        this.openModalCreatedEdited('Do you want to stay here?');\n        this.errorMessage = \"\";\n      },\n      (error) => {\n        if (error[\"status\"] == 401 || error[\"status\"] == 403){\n          this.router.navigateByUrl('/list');\n        } else {\n          this.errorMessage = \"Service not available, please try again\";\n        }\n      }\n    );\n  }\n\n  public openModalCreatedEdited(msg: string) {\n    this.messageModalTemplate = msg;\n    this.modalService.open(this.modalCreatedEdited).result.then(\n      r => {\n        if (r === '0') this.router.navigateByUrl('todo/list');\n        else { \n          this.isSubmitted = false;\n        }\n      }\n    );\n  }\n\n  public onChangeSelectUser(value:any){\n    this.todoForm.controls['userId'].setValue(value);\n  }\n\n  get registerFormControl() {\n    return this.todoForm.controls;\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n  \n}\n\n    \n\n    \n        \n    {{titleTemplate}}\n    {{errorMessage}}\n\n    \n        \n          User Id *\n          \n            Select User\n            {{user.id}} {{user.name}} ({{user.addressEntity.city}})\n          \n            User ID assigned to TODO\n            \n                User ID is required\n            \n        \n\n          \n            Title *\n            \n            Title of TODO length\n            \n                Title is required\n            \n          \n\n          \n            Completed *\n            \n                Not completed\n                Completed\n            \n            Select if it is to be done or is finished\n          \n\n          \n            Submit\n          \n    \n\n\n\n  \n    \n      {{titleTemplate}} successfully\n    \n    \n      {{messageModalTemplate}}\n    \n    \n      Yes\n      No, go to list\n    \n  \n\n\n    \n\n    \n                \n                    ./edit-create.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{titleTemplate}}    {{errorMessage}}                      User Id *                      Select User            {{user.id}} {{user.name}} ({{user.addressEntity.city}})                      User ID assigned to TODO                            User ID is required                                          Title *                        Title of TODO length                            Title is required                                            Completed *                            Not completed                Completed                        Select if it is to be done or is finished                                Submit                          {{titleTemplate}} successfully              {{messageModalTemplate}}              Yes      No, go to list      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditCreateComponent', 'selector': 'app-edit'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoginComponent', 'selector': 'app-login'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditCreateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared-module/header/header.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                styleUrls\n                ./header.component.css\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared-module/header/header.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared-module/header/header.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared-module/header/header.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void { }\n\n  logout() {\n    localStorage.removeItem('accessToken');\n    localStorage.removeItem('username');\n    localStorage.removeItem('id');\n    this.router.navigateByUrl('/login');\n  }\n\n}\n\n    \n\n    \n        \n        \n\n          \n            \n                List Todo\n            \n          \n            \n              \n                  Create Todo\n              \n              \n            \n              \n                  Login/Logout\n              \n              \n        \n\n\n    \n\n    \n                \n                    ./header.component.css\n                \n                .cursorMouseHover {\n    cursor: pointer;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                              List Todo                                                                  Create Todo                                                                        Login/Logout                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditCreateComponent', 'selector': 'app-edit'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoginComponent', 'selector': 'app-login'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/todo/home/home.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.css\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/todo/home/home.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/todo/home/home.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        Welcome to the TODOs app (navigate with the top bar) \n\n    \n\n    \n                \n                    ./home.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Welcome to the TODOs app (navigate with the top bar) '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditCreateComponent', 'selector': 'app-edit'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoginComponent', 'selector': 'app-login'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListComponent.html":{"url":"components/ListComponent.html","title":"component - ListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/todo/list/list.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-list\n            \n\n            \n                styleUrls\n                ./list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentPage\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                    Public\n                                errorMessage\n                            \n                            \n                                    Private\n                                FIRST_PAGE\n                            \n                            \n                                    Public\n                                formUserId\n                            \n                            \n                                    Public\n                                isPagination\n                            \n                            \n                                    Public\n                                linksPagination\n                            \n                            \n                                modalDelete\n                            \n                            \n                                    Public\n                                numberPages\n                            \n                            \n                                    Private\n                                SIZE_PAGE\n                            \n                            \n                                    Public\n                                todoCustom\n                            \n                            \n                                    Public\n                                todoCustomTemp\n                            \n                            \n                                    Public\n                                userIdLogged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                deleteTodo\n                            \n                            \n                                    Private\n                                getAllTodosList\n                            \n                            \n                                    Public\n                                getOnePage\n                            \n                            \n                                    Public\n                                getPageByLink\n                            \n                            \n                                    Public\n                                getPageByUrl\n                            \n                            \n                                    Private\n                                getTodosByUserId\n                            \n                            \n                                    Private\n                                inicializeFormUserId\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                openModalDelete\n                            \n                            \n                                    Private\n                                setLinksFromHeader\n                            \n                            \n                                    Public\n                                showPaginationAndGetFirstPage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(todoService: TodoService, userService: UserService, modalService: NgbModal)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/todo/list/list.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        todoService\n                                                  \n                                                        \n                                                                        TodoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    NgbModal\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        deleteTodo\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteTodo(id: number, idx: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/todo/list/list.component.ts:168\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    idx\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getAllTodosList\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllTodosList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/todo/list/list.component.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getOnePage\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOnePage(page: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/todo/list/list.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getPageByLink\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPageByLink(param: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/todo/list/list.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    param\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getPageByUrl\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPageByUrl(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/todo/list/list.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getTodosByUserId\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTodosByUserId(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/todo/list/list.component.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        inicializeFormUserId\n                        \n                    \n                \n            \n            \n                \n                    \n                    inicializeFormUserId()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/todo/list/list.component.ts:188\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/todo/list/list.component.ts:208\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/todo/list/list.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        openModalDelete\n                        \n                    \n                \n            \n            \n                \n                    \n                    openModalDelete(id: number, idx: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/todo/list/list.component.ts:160\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    idx\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setLinksFromHeader\n                        \n                    \n                \n            \n            \n                \n                    \n                    setLinksFromHeader(rawLinks: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/todo/list/list.component.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rawLinks\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        showPaginationAndGetFirstPage\n                        \n                    \n                \n            \n            \n                \n                    \n                    showPaginationAndGetFirstPage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/todo/list/list.component.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        currentPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/todo/list/list.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/todo/list/list.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/todo/list/list.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        FIRST_PAGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/todo/list/list.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        formUserId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/todo/list/list.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isPagination\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/todo/list/list.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        linksPagination\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/todo/list/list.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modalDelete\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('modalDelete', {static: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/todo/list/list.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        numberPages\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/todo/list/list.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        SIZE_PAGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                    \n                        \n                                Defined in src/app/components/todo/list/list.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        todoCustom\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TodoCustom[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/todo/list/list.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        todoCustomTemp\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TodoCustom[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/todo/list/list.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userIdLogged\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/todo/list/list.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { UserService } from 'src/app/services/user.service';\nimport { TodoService } from 'src/app/services/todo.service';\nimport { TodoCustom } from 'src/app/models/TodoCustom';\nimport { FormControl, FormGroup } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit {\n  @ViewChild(\"modalDelete\", { static: false }) modalDelete: TemplateRef;\n\n  private destroy$ = new Subject();\n  public errorMessage: string = '';\n\n  public userIdLogged: number;\n\n  public formUserId : FormGroup;\n\n  public todoCustom: TodoCustom[] = [];\n  public todoCustomTemp: TodoCustom[] = [];\n  \n  //TODO: MOVE IT TO A CLASS 'utils pagination'\n  private FIRST_PAGE: number = 0;\n  private SIZE_PAGE: number = 10;\n  public numberPages: Array;//Array to loop for in html template and show pagination\n  public isPagination: boolean = false;\n  public currentPage: number = 0;\n  public linksPagination = {};\n\n  constructor(private todoService: TodoService, \n    private userService: UserService,\n    private modalService: NgbModal) { }\n\n  ngOnInit(): void {\n    this.userIdLogged= this.userService.getUserIdLogged;\n    this.getAllTodosList();\n    this.inicializeFormUserId();\n  }\n\n\n  // param = 'next' || 'prev' || 'first' || 'last'\n  public getPageByLink(param: string) {\n\n    //change the parameter for the useful url\n    if (param === 'first') {\n      param = this.linksPagination['first']\n      this.currentPage = this.FIRST_PAGE;\n\n    } else if (param === 'prev') {\n      param = this.linksPagination['prev']\n      this.currentPage -= 1;\n\n    } else if (param === 'next') {\n      param = this.linksPagination['next']\n      this.currentPage += 1;\n\n    } else if (param === 'last') {\n      param = this.linksPagination['last']\n      this.currentPage = this.numberPages.length-1;\n    \n    } else { /* DO NOTHING */ } \n\n    this.getPageByUrl(param);\n\n  }\n\n  // navigate directly to a specific page\n  public getOnePage(page:number) {\n    this.currentPage = page;\n    let url = `${this.todoService.base_url}/todos/page/?page=${page}&size=${this.SIZE_PAGE}`;\n    this.getPageByUrl(url);\n  }\n\n  public getPageByUrl(url: string) {\n    this.todoService.getTodosPaginationByUrl(url).pipe(takeUntil(this.destroy$)).subscribe(\n      res => {\n        this.todoCustom = res.body['content'] as TodoCustom[];\n        this.numberPages = new Array(res.body['totalPages'] as number);\n        let rawLinks = res['headers'].get('link') as string;\n        this.setLinksFromHeader(rawLinks);\n      },\n      (error) => {\n        if (error[\"status\"] == 404){\n          this.todoCustom = [];\n        } else if (error[\"status\"] == 0){\n          this.errorMessage = \"Service not available, please try again\";\n        } else {\n          this.errorMessage = \"Something went wrong, try again or contact the administrator\";\n        } \n      }\n    );\n\n  }\n  \n  private setLinksFromHeader(rawLinks: string) {\n    if (rawLinks.length > 0) {\n      this.linksPagination = {};\n      let parts = rawLinks.split(',');\n      parts.forEach(p => {\n        let section = p.split(';');\n        let url = section[0].replace(//, '$1').trim();\n        let name = section[1].replace(/rel=\"(.*)\"/, '$1').trim();\n        this.linksPagination[name] = url;\n      });\n    }\n  }\n\n  private getAllTodosList() {\n    this.todoService.getAllTodosCustom().pipe(takeUntil(this.destroy$)).subscribe(\n      (res:TodoCustom[])=> {\n        this.todoCustom = res;\n        this.errorMessage = \"\";\n      },\n      (error) => {\n        if (error[\"status\"] == 404){\n          this.todoCustom = [];\n        } else if (error[\"status\"] == 0){\n          this.errorMessage = \"Service not available, please try again\";\n        } else {\n          this.errorMessage = \"Something went wrong, try again or contact the administrator\";\n        } \n      }\n    );\n  }\n\n  private getTodosByUserId(id: number) {\n    this.todoService.getTodoByUserId(Number(id)).pipe(takeUntil(this.destroy$)).subscribe(\n      (res:TodoCustom[])=> {\n        this.todoCustom = res;\n        this.errorMessage = \"\";\n      },\n      (error) => {\n        if (error[\"status\"] == 404){\n          this.todoCustom = [];\n        } else if (error[\"status\"] == 0){\n          this.errorMessage = \"Service not available, please try again\";\n        } else {\n          this.errorMessage = \"Something went wrong, try again or contact the administrator\";\n        } \n      }\n    );\n  }\n\n  public showPaginationAndGetFirstPage() {\n    if ( !this.isPagination ) {\n      this.formUserId.controls['id'].setValue(null);\n      this.getOnePage(this.FIRST_PAGE);\n    } else {\n      this.getAllTodosList();\n    }\n  }\n\n  public openModalDelete(id: number, idx: number) {\n    this.modalService.open(this.modalDelete).result.then(\n      r => {\n        if (r === '1') this.deleteTodo(id, idx)\n      }\n    );\n  }\n\n  private deleteTodo(id: number, idx: number){\n    this.todoService.deleteTodo(id).pipe(takeUntil(this.destroy$)).subscribe(\n      ()=> {\n        this.todoCustom.splice(idx, 1);\n        this.errorMessage = \"\";\n      },\n      (error) => {\n        if (error[\"status\"] == 401){\n          this.errorMessage = \"You can't delete TODO from other users\";\n        } else if (error[\"status\"] == 403){ // It shouldn't happen unless the user modifies the dom\n          this.errorMessage = \"You can't delete TODO from other users\";\n        } else {\n          this.errorMessage = \"Service not available, please try again\";\n        }\n      }\n\n      \n    );\n  }\n\n  private inicializeFormUserId() {\n    this.formUserId = new FormGroup({\n      id: new FormControl()\n    });\n\n    this.formUserId.valueChanges.pipe(takeUntil(this.destroy$)).subscribe(\n      (field)=> {\n        const id = this.formUserId.controls['id'].value\n        const isGoodId =  Number(id) && Number(id) > 0;\n        if (isGoodId) {\n          this.isPagination = false;\n          //this.links = {};\n          this.getTodosByUserId(id);\n        } else {\n          this.getAllTodosList();\n        }\n      }\n    );\n  }\n  \n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n}\n\n    \n\n    \n        \n  Todo List\n  {{errorMessage}}\n\n  \n    \n      Find by user id (only numbers > 0)\n      \n         0)\">\n      \n      \n        \n        Check the switch to activate paging\n        \n    \n    \n  \n  To edit/delete your TODOs, you must be logged in\n  \n  \n    Title\n    Username\n    User's city\n    User Street\n    Completed\n    Edit\n  \n\n  \n    {{todo.title}}\n    {{todo.user.username}}\n    {{todo.user.addressEntity.city}}\n    {{todo.user.addressEntity.street}}\n    {{todo.completed === true ? \"Completed\": \"Not Completed\"}}\n    \n       Edit \n      Delete\n    \n  \n\n  \n    \n      \n       \n         &lt;&lt; \n      \n       \n         &lt; \n      \n\n      \n         {{i+1}} \n      \n\n       \n         &gt; \n      \n       \n         &gt;&gt; \n      \n    \n  \n  \n  \n    TODOs not found\n  \n  \n\n\n\n\n  \n    \n      Delete TODO\n      \n        &times;\n      \n    \n    \n      Are you sure? This operation cannot be undone\n    \n    \n      No\n      Yes\n    \n  \n\n    \n\n    \n                \n                    ./list.component.css\n                \n                #heading {\n    font-weight: 700;\n}\ndiv {\n    text-align: center;\n}\n\n.textUnderline {\n    text-decoration: underline;\n}\n\n/* Chrome, Safari, Edge, Opera */\ninput::-webkit-outer-spin-button,\ninput::-webkit-inner-spin-button {\n  -webkit-appearance: none;\n  margin: 0;\n}\n\n/* Firefox */\ninput[type=number] {\n  -moz-appearance: textfield;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Todo List  {{errorMessage}}            Find by user id (only numbers > 0)               0)\">                            Check the switch to activate paging                    To edit/delete your TODOs, you must be logged in        Title    Username    User\\'s city    User Street    Completed    Edit        {{todo.title}}    {{todo.user.username}}    {{todo.user.addressEntity.city}}    {{todo.user.addressEntity.street}}    {{todo.completed === true ? \"Completed\": \"Not Completed\"}}           Edit       Delete                                                                             {{i+1}}                       >                       >>                     TODOs not found                Delete TODO              ×                    Are you sure? This operation cannot be undone              No      Yes      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditCreateComponent', 'selector': 'app-edit'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoginComponent', 'selector': 'app-login'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/login/login.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                    Public\n                                loginForm\n                            \n                            \n                                    Public\n                                messageForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                login\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/login/login.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login/login.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login/login.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        messageForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login/login.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { UserService } from 'src/app/services/user.service';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(private router: Router, private userService:UserService) { }\n\n  private destroy$ = new Subject();\n\n  public loginForm: FormGroup;\n\n  public messageForm: string = '';\n\n  ngOnInit(): void {\n    this.loginForm = new FormGroup({\n      username: new FormControl('jhon',[Validators.required]),\n      password: new FormControl('password',[Validators.required])\n    });\n  }\n\n  public login() {\n    if (this.loginForm.valid) {\n      \n      this.userService.login(this.loginForm.value).pipe(takeUntil(this.destroy$)\n        ).subscribe(res => {\n          localStorage.setItem('accessToken', res['accessToken']);\n          localStorage.setItem('username', res['username']);\n          localStorage.setItem('id', res['id']);\n          this.router.navigateByUrl('todo/list');\n          },\n          (error) => {\n            if (error[\"status\"] == 401){\n              this.messageForm = \"Invalid login or password\";\n            } else {\n              this.messageForm = \"Service not available, please try again\";\n            }\n          }\n        );\n    } else {\n      this.messageForm = \"all fields ir required\";\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                    Login\n                    \n                        \n                            \n                        \n                        \n                            \n                        \n                        \n                            Sign in\n                        \n                        {{messageForm}}\n                    \n                \n            \n        \n    \n\n\n\n    \n\n    \n                \n                    ./login.component.css\n                \n                .error{\n    color: rgb(230, 3, 3);\n    font-weight: bold;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            Login                                                                                                                                                                                                                                Sign in                                                {{messageForm}}                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditCreateComponent', 'selector': 'app-edit'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoginComponent', 'selector': 'app-login'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/LoginDto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/LoginDto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/LoginDto.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class LoginDto{\n    username: string;\n    password: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModuleModule.html":{"url":"modules/SharedModuleModule.html","title":"module - SharedModuleModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModuleModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared-module/shared-module.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [ ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule\n  ]\n})\nexport class SharedModuleModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Todo.html":{"url":"classes/Todo.html","title":"class - Todo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Todo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/Todo.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                completed\n                            \n                            \n                                id\n                            \n                            \n                                title\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        completed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/models/Todo.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/Todo.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/models/Todo.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/Todo.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Todo {\n    id: number = 0;\n    userId: number = 0;\n    title: string = '';\n    completed: boolean = false;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TodoCustom.html":{"url":"classes/TodoCustom.html","title":"class - TodoCustom","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TodoCustom\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/TodoCustom.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                completed\n                            \n                            \n                                id\n                            \n                            \n                                title\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        completed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/models/TodoCustom.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/TodoCustom.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/models/TodoCustom.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : new User\n                    \n                \n                    \n                        \n                                Defined in src/app/models/TodoCustom.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User } from 'src/app/models/User';\nexport class TodoCustom {\n    id: number = 0;\n    title: string = '';\n    user: User = new User;\n    completed: boolean =false;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TodoService.html":{"url":"injectables/TodoService.html","title":"injectable - TodoService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TodoService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/todo.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                base_url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createTodo\n                            \n                            \n                                deleteTodo\n                            \n                            \n                                editTodo\n                            \n                            \n                                getAllTodos\n                            \n                            \n                                getAllTodosCustom\n                            \n                            \n                                getTodoById\n                            \n                            \n                                getTodoByUserId\n                            \n                            \n                                getTodosPagination\n                            \n                            \n                                getTodosPaginationByUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/todo.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createTodo\n                        \n                    \n                \n            \n            \n                \ncreateTodo(todo: TodoCustom)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/todo.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    todo\n                                    \n                                                TodoCustom\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTodo\n                        \n                    \n                \n            \n            \n                \ndeleteTodo(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/todo.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editTodo\n                        \n                    \n                \n            \n            \n                \neditTodo(todo: TodoCustom)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/todo.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    todo\n                                    \n                                                TodoCustom\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllTodos\n                        \n                    \n                \n            \n            \n                \ngetAllTodos()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/todo.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllTodosCustom\n                        \n                    \n                \n            \n            \n                \ngetAllTodosCustom()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/todo.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTodoById\n                        \n                    \n                \n            \n            \n                \ngetTodoById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/todo.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTodoByUserId\n                        \n                    \n                \n            \n            \n                \ngetTodoByUserId(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/todo.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTodosPagination\n                        \n                    \n                \n            \n            \n                \ngetTodosPagination(page: number, size: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/todo.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    size\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTodosPaginationByUrl\n                        \n                    \n                \n            \n            \n                \ngetTodosPaginationByUrl(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/todo.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        base_url\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.CUSTOM_API_BASE_URL\n                    \n                \n                    \n                        \n                                Defined in src/app/services/todo.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport { TodoCustom } from 'src/app/models/TodoCustom';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TodoService {\n  public base_url = environment.CUSTOM_API_BASE_URL;\n\n  constructor(private httpClient: HttpClient) { }\n\n  getAllTodos() {\n    const url = `${this.base_url}/todos/`;\n    return this.httpClient.get(url);\n  }\n\n  getTodosPagination(page:number, size:number) {\n    const url = `${this.base_url}/todos/page/?page=${page}&size=${size}`;\n    return this.httpClient.get(url);\n  }\n\n  getAllTodosCustom() {\n    const url = `${this.base_url}/todos/`;\n    return this.httpClient.get(url);\n  }\n\n  getTodoByUserId(id:number) {\n    const url = `${this.base_url}/todos/userid/${id}/`;\n    return this.httpClient.get(url);\n  }\n\n  getTodosPaginationByUrl(url: string){\n    return this.httpClient.get(url,{ observe: 'response'});\n  }\n\n  getTodoById(id:number) {\n    const url = `${this.base_url}/todos/${id}/`;\n    return this.httpClient.get(url);\n  }\n  \n  createTodo(todo:TodoCustom) {\n    const url = `${this.base_url}/todos/`;\n    return this.httpClient.post(url, todo);\n  }\n\n  editTodo(todo:TodoCustom) {\n    const url = `${this.base_url}/todos/${todo.id}/`;\n    return this.httpClient.put(url, todo);\n  }\n\n  deleteTodo(id:number) {\n    const url = `${this.base_url}/todos/${id}/`;\n    return this.httpClient.delete(url);\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/User.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addressEntity\n                            \n                            \n                                completed\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addressEntity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Address\n\n                    \n                \n                \n                    \n                        Default value : new Address\n                    \n                \n                    \n                        \n                                Defined in src/app/models/User.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        completed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/User.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/User.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/User.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/User.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Address } from 'src/app/models/Address';\nexport class User {\n    id: number;\n    username: string;\n    name: number;\n    completed: boolean;\n    addressEntity:Address = new Address;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                base_url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                checkHasPermissionModidy\n                            \n                            \n                                    Public\n                                getAllUsers\n                            \n                            \n                                    Public\n                                getUserById\n                            \n                            \n                                    Public\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getUserIdLogged\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/user.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        checkHasPermissionModidy\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkHasPermissionModidy(ownerId: number, userIdLogged: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ownerId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userIdLogged\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getAllUsers\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getUserById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(formData: LoginDto)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formData\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        base_url\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.CUSTOM_API_BASE_URL\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        getUserIdLogged\n                    \n                \n\n                \n                    \n                        getgetUserIdLogged()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/user.service.ts:32\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../models/User';\nimport { LoginDto } from 'src/app/models/LoginDto';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  public base_url = environment.CUSTOM_API_BASE_URL;\n\n  constructor(private httpClient: HttpClient, private router: Router) {}\n\n  public login(formData: LoginDto) {\n    const url = `${this.base_url}/auth/login`;\n    return this.httpClient.post(url, formData);\n  }\n\n  public getAllUsers(){\n    const url = `${this.base_url}/user/`;\n    return this.httpClient.get(url);\n  }\n\n  public getUserById(id: number) {\n    const url = `${this.base_url}/user/${id}`;\n    return this.httpClient.get(url);\n  }\n\n  get getUserIdLogged() {\n    return Number(localStorage.getItem('id')) || 0;\n  }\n\n  public checkHasPermissionModidy(ownerId: number, userIdLogged: number): boolean {\n    return ownerId === userIdLogged;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/todo/edit-create/edit-create.component.ts\n            \n            component\n            EditCreateComponent\n            \n                0 %\n                (0/27)\n            \n        \n        \n            \n                \n                src/app/components/todo/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/todo/list/list.component.ts\n            \n            component\n            ListComponent\n            \n                0 %\n                (0/27)\n            \n        \n        \n            \n                \n                src/app/core/guards/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/interceptors/auth.interceptor.ts\n            \n            interceptor\n            AuthInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/Address.ts\n            \n            class\n            Address\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/models/LoginDto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/Todo.ts\n            \n            class\n            Todo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/models/TodoCustom.ts\n            \n            class\n            TodoCustom\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/models/User.ts\n            \n            class\n            User\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/todo.service.ts\n            \n            injectable\n            TodoService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/shared-module/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~12.0.0\n        \n            @angular/common : ~12.0.0\n        \n            @angular/compiler : ~12.0.0\n        \n            @angular/core : ~12.0.0\n        \n            @angular/forms : ~12.0.0\n        \n            @angular/platform-browser : ~12.0.0\n        \n            @angular/platform-browser-dynamic : ~12.0.0\n        \n            @angular/router : ~12.0.0\n        \n            @ng-bootstrap/ng-bootstrap : ^10.0.0\n        \n            bootstrap : ^5.0.2\n        \n            jquery : ^3.6.0\n        \n            popper.js : ^1.16.1\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.1.0\n        \n            zone.js : ~0.11.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nOhmycodetodo Frontend\nThis project was generated with Angular CLI version 12.0.0.\nThe challenge is to create an application to manage user task lists (TODOs).\nThis application will have two parts: Frontend (Angular) and Backend (Java Spring).\nRequirements\nFor building and running the application you need:\n\n[Node Js]\n[Angular CLI]\n\nDevelopment server\nRun at the root of the project npm install to install the necessary dependencies in the local node_modules folder.\nOnce we have the dependencies correctly installed, we can run the application.\nRun at the root of the project ng serve -o for a dev server. It will open the application directly in the browser that you have installed.\nIf you don't have the Angular CLI, you can run npm start and open your browser by opening your browser at http: // localhost: 4200 /\nApplication testing\nTo access the application, you must log in with a valid username and password.\nYou can find the users in the data.sql file of the Spring Boot application (proofTodoBackend\\src\\main\\resources\\data.sql)\nAll users have password = 'password'\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ComponentsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ComponentsRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModuleModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_ComponentsModule\n\n\n\ncluster_ComponentsModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthInterceptor\n\nAuthInterceptor\n\nAppModule -->\n\nAuthInterceptor->AppModule\n\n\n\n\n\nEditCreateComponent\n\nEditCreateComponent\n\n\n\nComponentsModule\n\nComponentsModule\n\nComponentsModule -->\n\nEditCreateComponent->ComponentsModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nComponentsModule -->\n\nHomeComponent->ComponentsModule\n\n\n\n\n\nListComponent\n\nListComponent\n\nComponentsModule -->\n\nListComponent->ComponentsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        13 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require.context('./', true, /\\.spec\\.ts$/)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        require\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  CUSTOM_API_BASE_URL: 'http://localhost:8080/api',\n  MOOK_API_BASE_URL: 'https://jsonplaceholder.typicode.com',\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  BASE_URL: 'https://jsonplaceholder.typicode.com',\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
